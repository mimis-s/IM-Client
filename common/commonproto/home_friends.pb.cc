// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: home_friends.proto

#include "home_friends.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace im_home_proto {
PROTOBUF_CONSTEXPR FriendInfoStatus::FriendInfoStatus(
    ::_pbi::ConstantInitialized)
  : friend__(nullptr)
  , isupdatehead_(false){}
struct FriendInfoStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendInfoStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendInfoStatusDefaultTypeInternal() {}
  union {
    FriendInfoStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendInfoStatusDefaultTypeInternal _FriendInfoStatus_default_instance_;
PROTOBUF_CONSTEXPR FriendsStatusList::FriendsStatusList(
    ::_pbi::ConstantInitialized)
  : friendsstatuslist_()
  , sendfriendapplylist_()
  , receivefriendapplylist_(){}
struct FriendsStatusListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendsStatusListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendsStatusListDefaultTypeInternal() {}
  union {
    FriendsStatusList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendsStatusListDefaultTypeInternal _FriendsStatusList_default_instance_;
PROTOBUF_CONSTEXPR ApplyFriendsReq::ApplyFriendsReq(
    ::_pbi::ConstantInitialized)
  : applyfriendsid_(int64_t{0}){}
struct ApplyFriendsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApplyFriendsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApplyFriendsReqDefaultTypeInternal() {}
  union {
    ApplyFriendsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApplyFriendsReqDefaultTypeInternal _ApplyFriendsReq_default_instance_;
PROTOBUF_CONSTEXPR ApplyFriendsRes::ApplyFriendsRes(
    ::_pbi::ConstantInitialized)
  : friendinfo_(nullptr){}
struct ApplyFriendsResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApplyFriendsResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApplyFriendsResDefaultTypeInternal() {}
  union {
    ApplyFriendsRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApplyFriendsResDefaultTypeInternal _ApplyFriendsRes_default_instance_;
PROTOBUF_CONSTEXPR AgreeFriendApplyReq::AgreeFriendApplyReq(
    ::_pbi::ConstantInitialized)
  : friendsid_(int64_t{0}){}
struct AgreeFriendApplyReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgreeFriendApplyReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgreeFriendApplyReqDefaultTypeInternal() {}
  union {
    AgreeFriendApplyReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgreeFriendApplyReqDefaultTypeInternal _AgreeFriendApplyReq_default_instance_;
PROTOBUF_CONSTEXPR AgreeFriendApplyRes::AgreeFriendApplyRes(
    ::_pbi::ConstantInitialized)
  : friendsid_(int64_t{0}){}
struct AgreeFriendApplyResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgreeFriendApplyResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgreeFriendApplyResDefaultTypeInternal() {}
  union {
    AgreeFriendApplyRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgreeFriendApplyResDefaultTypeInternal _AgreeFriendApplyRes_default_instance_;
PROTOBUF_CONSTEXPR DelFriendsReq::DelFriendsReq(
    ::_pbi::ConstantInitialized)
  : friendsid_(int64_t{0}){}
struct DelFriendsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelFriendsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelFriendsReqDefaultTypeInternal() {}
  union {
    DelFriendsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelFriendsReqDefaultTypeInternal _DelFriendsReq_default_instance_;
PROTOBUF_CONSTEXPR DelFriendsRes::DelFriendsRes(
    ::_pbi::ConstantInitialized)
  : friendsid_(int64_t{0}){}
struct DelFriendsResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelFriendsResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelFriendsResDefaultTypeInternal() {}
  union {
    DelFriendsRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelFriendsResDefaultTypeInternal _DelFriendsRes_default_instance_;
}  // namespace im_home_proto
static ::_pb::Metadata file_level_metadata_home_5ffriends_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_home_5ffriends_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_home_5ffriends_2eproto = nullptr;

const uint32_t TableStruct_home_5ffriends_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::FriendInfoStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::FriendInfoStatus, friend__),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::FriendInfoStatus, isupdatehead_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::FriendsStatusList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::FriendsStatusList, friendsstatuslist_),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::FriendsStatusList, sendfriendapplylist_),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::FriendsStatusList, receivefriendapplylist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsReq, applyfriendsid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsRes, friendinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::AgreeFriendApplyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::AgreeFriendApplyReq, friendsid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::AgreeFriendApplyRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::AgreeFriendApplyRes, friendsid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::DelFriendsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::DelFriendsReq, friendsid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::DelFriendsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::DelFriendsRes, friendsid_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::im_home_proto::FriendInfoStatus)},
  { 8, -1, -1, sizeof(::im_home_proto::FriendsStatusList)},
  { 17, -1, -1, sizeof(::im_home_proto::ApplyFriendsReq)},
  { 24, -1, -1, sizeof(::im_home_proto::ApplyFriendsRes)},
  { 31, -1, -1, sizeof(::im_home_proto::AgreeFriendApplyReq)},
  { 38, -1, -1, sizeof(::im_home_proto::AgreeFriendApplyRes)},
  { 45, -1, -1, sizeof(::im_home_proto::DelFriendsReq)},
  { 52, -1, -1, sizeof(::im_home_proto::DelFriendsRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::im_home_proto::_FriendInfoStatus_default_instance_._instance,
  &::im_home_proto::_FriendsStatusList_default_instance_._instance,
  &::im_home_proto::_ApplyFriendsReq_default_instance_._instance,
  &::im_home_proto::_ApplyFriendsRes_default_instance_._instance,
  &::im_home_proto::_AgreeFriendApplyReq_default_instance_._instance,
  &::im_home_proto::_AgreeFriendApplyRes_default_instance_._instance,
  &::im_home_proto::_DelFriendsReq_default_instance_._instance,
  &::im_home_proto::_DelFriendsRes_default_instance_._instance,
};

const char descriptor_table_protodef_home_5ffriends_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022home_friends.proto\022\rim_home_proto\032\022hom"
  "e_account.proto\"Q\n\020FriendInfoStatus\022\'\n\006F"
  "riend\030\001 \001(\0132\027.im_home_proto.UserInfo\022\024\n\014"
  "IsUpdateHead\030\002 \001(\010\"\316\001\n\021FriendsStatusList"
  "\022:\n\021FriendsStatusList\030\001 \003(\0132\037.im_home_pr"
  "oto.FriendInfoStatus\022<\n\023SendFriendApplyL"
  "ist\030\002 \003(\0132\037.im_home_proto.FriendInfoStat"
  "us\022\?\n\026ReceiveFriendApplyList\030\003 \003(\0132\037.im_"
  "home_proto.FriendInfoStatus\")\n\017ApplyFrie"
  "ndsReq\022\026\n\016ApplyFriendsID\030\001 \001(\003\">\n\017ApplyF"
  "riendsRes\022+\n\nFriendInfo\030\001 \001(\0132\027.im_home_"
  "proto.UserInfo\"(\n\023AgreeFriendApplyReq\022\021\n"
  "\tFriendsID\030\001 \001(\003\"(\n\023AgreeFriendApplyRes\022"
  "\021\n\tFriendsID\030\001 \001(\003\"\"\n\rDelFriendsReq\022\021\n\tF"
  "riendsID\030\001 \001(\003\"\"\n\rDelFriendsRes\022\021\n\tFrien"
  "dsID\030\001 \001(\003BDZBgithub.com/mimis-s/IM-Serv"
  "ice/src/common/commonproto/im_home_proto"
  "b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_home_5ffriends_2eproto_deps[1] = {
  &::descriptor_table_home_5faccount_2eproto,
};
static ::_pbi::once_flag descriptor_table_home_5ffriends_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_home_5ffriends_2eproto = {
    false, false, 688, descriptor_table_protodef_home_5ffriends_2eproto,
    "home_friends.proto",
    &descriptor_table_home_5ffriends_2eproto_once, descriptor_table_home_5ffriends_2eproto_deps, 1, 8,
    schemas, file_default_instances, TableStruct_home_5ffriends_2eproto::offsets,
    file_level_metadata_home_5ffriends_2eproto, file_level_enum_descriptors_home_5ffriends_2eproto,
    file_level_service_descriptors_home_5ffriends_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_home_5ffriends_2eproto_getter() {
  return &descriptor_table_home_5ffriends_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_home_5ffriends_2eproto(&descriptor_table_home_5ffriends_2eproto);
namespace im_home_proto {

// ===================================================================

class FriendInfoStatus::_Internal {
 public:
  static const ::im_home_proto::UserInfo& friend_(const FriendInfoStatus* msg);
};

const ::im_home_proto::UserInfo&
FriendInfoStatus::_Internal::friend_(const FriendInfoStatus* msg) {
  return *msg->friend__;
}
void FriendInfoStatus::clear_friend_() {
  if (GetArenaForAllocation() == nullptr && friend__ != nullptr) {
    delete friend__;
  }
  friend__ = nullptr;
}
FriendInfoStatus::FriendInfoStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.FriendInfoStatus)
}
FriendInfoStatus::FriendInfoStatus(const FriendInfoStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_friend_()) {
    friend__ = new ::im_home_proto::UserInfo(*from.friend__);
  } else {
    friend__ = nullptr;
  }
  isupdatehead_ = from.isupdatehead_;
  // @@protoc_insertion_point(copy_constructor:im_home_proto.FriendInfoStatus)
}

inline void FriendInfoStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&friend__) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&isupdatehead_) -
    reinterpret_cast<char*>(&friend__)) + sizeof(isupdatehead_));
}

FriendInfoStatus::~FriendInfoStatus() {
  // @@protoc_insertion_point(destructor:im_home_proto.FriendInfoStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FriendInfoStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete friend__;
}

void FriendInfoStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FriendInfoStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.FriendInfoStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && friend__ != nullptr) {
    delete friend__;
  }
  friend__ = nullptr;
  isupdatehead_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendInfoStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .im_home_proto.UserInfo Friend = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_friend_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool IsUpdateHead = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          isupdatehead_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendInfoStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.FriendInfoStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .im_home_proto.UserInfo Friend = 1;
  if (this->_internal_has_friend_()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::friend_(this),
        _Internal::friend_(this).GetCachedSize(), target, stream);
  }

  // bool IsUpdateHead = 2;
  if (this->_internal_isupdatehead() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_isupdatehead(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.FriendInfoStatus)
  return target;
}

size_t FriendInfoStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.FriendInfoStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .im_home_proto.UserInfo Friend = 1;
  if (this->_internal_has_friend_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friend__);
  }

  // bool IsUpdateHead = 2;
  if (this->_internal_isupdatehead() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendInfoStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FriendInfoStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendInfoStatus::GetClassData() const { return &_class_data_; }

void FriendInfoStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FriendInfoStatus *>(to)->MergeFrom(
      static_cast<const FriendInfoStatus &>(from));
}


void FriendInfoStatus::MergeFrom(const FriendInfoStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.FriendInfoStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_friend_()) {
    _internal_mutable_friend_()->::im_home_proto::UserInfo::MergeFrom(from._internal_friend_());
  }
  if (from._internal_isupdatehead() != 0) {
    _internal_set_isupdatehead(from._internal_isupdatehead());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendInfoStatus::CopyFrom(const FriendInfoStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.FriendInfoStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInfoStatus::IsInitialized() const {
  return true;
}

void FriendInfoStatus::InternalSwap(FriendInfoStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FriendInfoStatus, isupdatehead_)
      + sizeof(FriendInfoStatus::isupdatehead_)
      - PROTOBUF_FIELD_OFFSET(FriendInfoStatus, friend__)>(
          reinterpret_cast<char*>(&friend__),
          reinterpret_cast<char*>(&other->friend__));
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendInfoStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[0]);
}

// ===================================================================

class FriendsStatusList::_Internal {
 public:
};

FriendsStatusList::FriendsStatusList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  friendsstatuslist_(arena),
  sendfriendapplylist_(arena),
  receivefriendapplylist_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.FriendsStatusList)
}
FriendsStatusList::FriendsStatusList(const FriendsStatusList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      friendsstatuslist_(from.friendsstatuslist_),
      sendfriendapplylist_(from.sendfriendapplylist_),
      receivefriendapplylist_(from.receivefriendapplylist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:im_home_proto.FriendsStatusList)
}

inline void FriendsStatusList::SharedCtor() {
}

FriendsStatusList::~FriendsStatusList() {
  // @@protoc_insertion_point(destructor:im_home_proto.FriendsStatusList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FriendsStatusList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FriendsStatusList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FriendsStatusList::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.FriendsStatusList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendsstatuslist_.Clear();
  sendfriendapplylist_.Clear();
  receivefriendapplylist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendsStatusList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .im_home_proto.FriendInfoStatus FriendsStatusList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friendsstatuslist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .im_home_proto.FriendInfoStatus SendFriendApplyList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sendfriendapplylist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .im_home_proto.FriendInfoStatus ReceiveFriendApplyList = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_receivefriendapplylist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendsStatusList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.FriendsStatusList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .im_home_proto.FriendInfoStatus FriendsStatusList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_friendsstatuslist_size()); i < n; i++) {
    const auto& repfield = this->_internal_friendsstatuslist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .im_home_proto.FriendInfoStatus SendFriendApplyList = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sendfriendapplylist_size()); i < n; i++) {
    const auto& repfield = this->_internal_sendfriendapplylist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .im_home_proto.FriendInfoStatus ReceiveFriendApplyList = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_receivefriendapplylist_size()); i < n; i++) {
    const auto& repfield = this->_internal_receivefriendapplylist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.FriendsStatusList)
  return target;
}

size_t FriendsStatusList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.FriendsStatusList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .im_home_proto.FriendInfoStatus FriendsStatusList = 1;
  total_size += 1UL * this->_internal_friendsstatuslist_size();
  for (const auto& msg : this->friendsstatuslist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .im_home_proto.FriendInfoStatus SendFriendApplyList = 2;
  total_size += 1UL * this->_internal_sendfriendapplylist_size();
  for (const auto& msg : this->sendfriendapplylist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .im_home_proto.FriendInfoStatus ReceiveFriendApplyList = 3;
  total_size += 1UL * this->_internal_receivefriendapplylist_size();
  for (const auto& msg : this->receivefriendapplylist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendsStatusList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FriendsStatusList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendsStatusList::GetClassData() const { return &_class_data_; }

void FriendsStatusList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FriendsStatusList *>(to)->MergeFrom(
      static_cast<const FriendsStatusList &>(from));
}


void FriendsStatusList::MergeFrom(const FriendsStatusList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.FriendsStatusList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  friendsstatuslist_.MergeFrom(from.friendsstatuslist_);
  sendfriendapplylist_.MergeFrom(from.sendfriendapplylist_);
  receivefriendapplylist_.MergeFrom(from.receivefriendapplylist_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendsStatusList::CopyFrom(const FriendsStatusList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.FriendsStatusList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendsStatusList::IsInitialized() const {
  return true;
}

void FriendsStatusList::InternalSwap(FriendsStatusList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  friendsstatuslist_.InternalSwap(&other->friendsstatuslist_);
  sendfriendapplylist_.InternalSwap(&other->sendfriendapplylist_);
  receivefriendapplylist_.InternalSwap(&other->receivefriendapplylist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendsStatusList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[1]);
}

// ===================================================================

class ApplyFriendsReq::_Internal {
 public:
};

ApplyFriendsReq::ApplyFriendsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.ApplyFriendsReq)
}
ApplyFriendsReq::ApplyFriendsReq(const ApplyFriendsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applyfriendsid_ = from.applyfriendsid_;
  // @@protoc_insertion_point(copy_constructor:im_home_proto.ApplyFriendsReq)
}

inline void ApplyFriendsReq::SharedCtor() {
applyfriendsid_ = int64_t{0};
}

ApplyFriendsReq::~ApplyFriendsReq() {
  // @@protoc_insertion_point(destructor:im_home_proto.ApplyFriendsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApplyFriendsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ApplyFriendsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ApplyFriendsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.ApplyFriendsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applyfriendsid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApplyFriendsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 ApplyFriendsID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          applyfriendsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApplyFriendsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.ApplyFriendsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ApplyFriendsID = 1;
  if (this->_internal_applyfriendsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_applyfriendsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.ApplyFriendsReq)
  return target;
}

size_t ApplyFriendsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.ApplyFriendsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 ApplyFriendsID = 1;
  if (this->_internal_applyfriendsid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_applyfriendsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApplyFriendsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ApplyFriendsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApplyFriendsReq::GetClassData() const { return &_class_data_; }

void ApplyFriendsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ApplyFriendsReq *>(to)->MergeFrom(
      static_cast<const ApplyFriendsReq &>(from));
}


void ApplyFriendsReq::MergeFrom(const ApplyFriendsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.ApplyFriendsReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_applyfriendsid() != 0) {
    _internal_set_applyfriendsid(from._internal_applyfriendsid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApplyFriendsReq::CopyFrom(const ApplyFriendsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.ApplyFriendsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFriendsReq::IsInitialized() const {
  return true;
}

void ApplyFriendsReq::InternalSwap(ApplyFriendsReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(applyfriendsid_, other->applyfriendsid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplyFriendsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[2]);
}

// ===================================================================

class ApplyFriendsRes::_Internal {
 public:
  static const ::im_home_proto::UserInfo& friendinfo(const ApplyFriendsRes* msg);
};

const ::im_home_proto::UserInfo&
ApplyFriendsRes::_Internal::friendinfo(const ApplyFriendsRes* msg) {
  return *msg->friendinfo_;
}
void ApplyFriendsRes::clear_friendinfo() {
  if (GetArenaForAllocation() == nullptr && friendinfo_ != nullptr) {
    delete friendinfo_;
  }
  friendinfo_ = nullptr;
}
ApplyFriendsRes::ApplyFriendsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.ApplyFriendsRes)
}
ApplyFriendsRes::ApplyFriendsRes(const ApplyFriendsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_friendinfo()) {
    friendinfo_ = new ::im_home_proto::UserInfo(*from.friendinfo_);
  } else {
    friendinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:im_home_proto.ApplyFriendsRes)
}

inline void ApplyFriendsRes::SharedCtor() {
friendinfo_ = nullptr;
}

ApplyFriendsRes::~ApplyFriendsRes() {
  // @@protoc_insertion_point(destructor:im_home_proto.ApplyFriendsRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApplyFriendsRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete friendinfo_;
}

void ApplyFriendsRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ApplyFriendsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.ApplyFriendsRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && friendinfo_ != nullptr) {
    delete friendinfo_;
  }
  friendinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApplyFriendsRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .im_home_proto.UserInfo FriendInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_friendinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApplyFriendsRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.ApplyFriendsRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .im_home_proto.UserInfo FriendInfo = 1;
  if (this->_internal_has_friendinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::friendinfo(this),
        _Internal::friendinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.ApplyFriendsRes)
  return target;
}

size_t ApplyFriendsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.ApplyFriendsRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .im_home_proto.UserInfo FriendInfo = 1;
  if (this->_internal_has_friendinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friendinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApplyFriendsRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ApplyFriendsRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApplyFriendsRes::GetClassData() const { return &_class_data_; }

void ApplyFriendsRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ApplyFriendsRes *>(to)->MergeFrom(
      static_cast<const ApplyFriendsRes &>(from));
}


void ApplyFriendsRes::MergeFrom(const ApplyFriendsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.ApplyFriendsRes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_friendinfo()) {
    _internal_mutable_friendinfo()->::im_home_proto::UserInfo::MergeFrom(from._internal_friendinfo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApplyFriendsRes::CopyFrom(const ApplyFriendsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.ApplyFriendsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFriendsRes::IsInitialized() const {
  return true;
}

void ApplyFriendsRes::InternalSwap(ApplyFriendsRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friendinfo_, other->friendinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplyFriendsRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[3]);
}

// ===================================================================

class AgreeFriendApplyReq::_Internal {
 public:
};

AgreeFriendApplyReq::AgreeFriendApplyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.AgreeFriendApplyReq)
}
AgreeFriendApplyReq::AgreeFriendApplyReq(const AgreeFriendApplyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friendsid_ = from.friendsid_;
  // @@protoc_insertion_point(copy_constructor:im_home_proto.AgreeFriendApplyReq)
}

inline void AgreeFriendApplyReq::SharedCtor() {
friendsid_ = int64_t{0};
}

AgreeFriendApplyReq::~AgreeFriendApplyReq() {
  // @@protoc_insertion_point(destructor:im_home_proto.AgreeFriendApplyReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgreeFriendApplyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AgreeFriendApplyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgreeFriendApplyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.AgreeFriendApplyReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendsid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgreeFriendApplyReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 FriendsID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friendsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgreeFriendApplyReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.AgreeFriendApplyReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_friendsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.AgreeFriendApplyReq)
  return target;
}

size_t AgreeFriendApplyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.AgreeFriendApplyReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_friendsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgreeFriendApplyReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgreeFriendApplyReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgreeFriendApplyReq::GetClassData() const { return &_class_data_; }

void AgreeFriendApplyReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgreeFriendApplyReq *>(to)->MergeFrom(
      static_cast<const AgreeFriendApplyReq &>(from));
}


void AgreeFriendApplyReq::MergeFrom(const AgreeFriendApplyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.AgreeFriendApplyReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friendsid() != 0) {
    _internal_set_friendsid(from._internal_friendsid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgreeFriendApplyReq::CopyFrom(const AgreeFriendApplyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.AgreeFriendApplyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeFriendApplyReq::IsInitialized() const {
  return true;
}

void AgreeFriendApplyReq::InternalSwap(AgreeFriendApplyReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friendsid_, other->friendsid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgreeFriendApplyReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[4]);
}

// ===================================================================

class AgreeFriendApplyRes::_Internal {
 public:
};

AgreeFriendApplyRes::AgreeFriendApplyRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.AgreeFriendApplyRes)
}
AgreeFriendApplyRes::AgreeFriendApplyRes(const AgreeFriendApplyRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friendsid_ = from.friendsid_;
  // @@protoc_insertion_point(copy_constructor:im_home_proto.AgreeFriendApplyRes)
}

inline void AgreeFriendApplyRes::SharedCtor() {
friendsid_ = int64_t{0};
}

AgreeFriendApplyRes::~AgreeFriendApplyRes() {
  // @@protoc_insertion_point(destructor:im_home_proto.AgreeFriendApplyRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgreeFriendApplyRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AgreeFriendApplyRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgreeFriendApplyRes::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.AgreeFriendApplyRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendsid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgreeFriendApplyRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 FriendsID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friendsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgreeFriendApplyRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.AgreeFriendApplyRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_friendsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.AgreeFriendApplyRes)
  return target;
}

size_t AgreeFriendApplyRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.AgreeFriendApplyRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_friendsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgreeFriendApplyRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgreeFriendApplyRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgreeFriendApplyRes::GetClassData() const { return &_class_data_; }

void AgreeFriendApplyRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgreeFriendApplyRes *>(to)->MergeFrom(
      static_cast<const AgreeFriendApplyRes &>(from));
}


void AgreeFriendApplyRes::MergeFrom(const AgreeFriendApplyRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.AgreeFriendApplyRes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friendsid() != 0) {
    _internal_set_friendsid(from._internal_friendsid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgreeFriendApplyRes::CopyFrom(const AgreeFriendApplyRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.AgreeFriendApplyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeFriendApplyRes::IsInitialized() const {
  return true;
}

void AgreeFriendApplyRes::InternalSwap(AgreeFriendApplyRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friendsid_, other->friendsid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgreeFriendApplyRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[5]);
}

// ===================================================================

class DelFriendsReq::_Internal {
 public:
};

DelFriendsReq::DelFriendsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.DelFriendsReq)
}
DelFriendsReq::DelFriendsReq(const DelFriendsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friendsid_ = from.friendsid_;
  // @@protoc_insertion_point(copy_constructor:im_home_proto.DelFriendsReq)
}

inline void DelFriendsReq::SharedCtor() {
friendsid_ = int64_t{0};
}

DelFriendsReq::~DelFriendsReq() {
  // @@protoc_insertion_point(destructor:im_home_proto.DelFriendsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DelFriendsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DelFriendsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DelFriendsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.DelFriendsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendsid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelFriendsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 FriendsID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friendsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DelFriendsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.DelFriendsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_friendsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.DelFriendsReq)
  return target;
}

size_t DelFriendsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.DelFriendsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_friendsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelFriendsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DelFriendsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelFriendsReq::GetClassData() const { return &_class_data_; }

void DelFriendsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DelFriendsReq *>(to)->MergeFrom(
      static_cast<const DelFriendsReq &>(from));
}


void DelFriendsReq::MergeFrom(const DelFriendsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.DelFriendsReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friendsid() != 0) {
    _internal_set_friendsid(from._internal_friendsid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelFriendsReq::CopyFrom(const DelFriendsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.DelFriendsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendsReq::IsInitialized() const {
  return true;
}

void DelFriendsReq::InternalSwap(DelFriendsReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friendsid_, other->friendsid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelFriendsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[6]);
}

// ===================================================================

class DelFriendsRes::_Internal {
 public:
};

DelFriendsRes::DelFriendsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.DelFriendsRes)
}
DelFriendsRes::DelFriendsRes(const DelFriendsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friendsid_ = from.friendsid_;
  // @@protoc_insertion_point(copy_constructor:im_home_proto.DelFriendsRes)
}

inline void DelFriendsRes::SharedCtor() {
friendsid_ = int64_t{0};
}

DelFriendsRes::~DelFriendsRes() {
  // @@protoc_insertion_point(destructor:im_home_proto.DelFriendsRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DelFriendsRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DelFriendsRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DelFriendsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.DelFriendsRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendsid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelFriendsRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 FriendsID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friendsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DelFriendsRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.DelFriendsRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_friendsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.DelFriendsRes)
  return target;
}

size_t DelFriendsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.DelFriendsRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 FriendsID = 1;
  if (this->_internal_friendsid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_friendsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelFriendsRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DelFriendsRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelFriendsRes::GetClassData() const { return &_class_data_; }

void DelFriendsRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DelFriendsRes *>(to)->MergeFrom(
      static_cast<const DelFriendsRes &>(from));
}


void DelFriendsRes::MergeFrom(const DelFriendsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.DelFriendsRes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friendsid() != 0) {
    _internal_set_friendsid(from._internal_friendsid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelFriendsRes::CopyFrom(const DelFriendsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.DelFriendsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendsRes::IsInitialized() const {
  return true;
}

void DelFriendsRes::InternalSwap(DelFriendsRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friendsid_, other->friendsid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelFriendsRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5ffriends_2eproto_getter, &descriptor_table_home_5ffriends_2eproto_once,
      file_level_metadata_home_5ffriends_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace im_home_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::im_home_proto::FriendInfoStatus*
Arena::CreateMaybeMessage< ::im_home_proto::FriendInfoStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::FriendInfoStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::FriendsStatusList*
Arena::CreateMaybeMessage< ::im_home_proto::FriendsStatusList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::FriendsStatusList >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::ApplyFriendsReq*
Arena::CreateMaybeMessage< ::im_home_proto::ApplyFriendsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::ApplyFriendsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::ApplyFriendsRes*
Arena::CreateMaybeMessage< ::im_home_proto::ApplyFriendsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::ApplyFriendsRes >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::AgreeFriendApplyReq*
Arena::CreateMaybeMessage< ::im_home_proto::AgreeFriendApplyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::AgreeFriendApplyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::AgreeFriendApplyRes*
Arena::CreateMaybeMessage< ::im_home_proto::AgreeFriendApplyRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::AgreeFriendApplyRes >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::DelFriendsReq*
Arena::CreateMaybeMessage< ::im_home_proto::DelFriendsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::DelFriendsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::DelFriendsRes*
Arena::CreateMaybeMessage< ::im_home_proto::DelFriendsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::DelFriendsRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
