// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: home_message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_home_5fmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_home_5fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "home_chat.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_home_5fmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_home_5fmessage_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_home_5fmessage_2eproto;
namespace im_home_proto {
class DownLoadFileMessageReq;
struct DownLoadFileMessageReqDefaultTypeInternal;
extern DownLoadFileMessageReqDefaultTypeInternal _DownLoadFileMessageReq_default_instance_;
class DownLoadFileMessageRes;
struct DownLoadFileMessageResDefaultTypeInternal;
extern DownLoadFileMessageResDefaultTypeInternal _DownLoadFileMessageRes_default_instance_;
class GetSingleChatHistoryReq;
struct GetSingleChatHistoryReqDefaultTypeInternal;
extern GetSingleChatHistoryReqDefaultTypeInternal _GetSingleChatHistoryReq_default_instance_;
class GetSingleChatHistoryRes;
struct GetSingleChatHistoryResDefaultTypeInternal;
extern GetSingleChatHistoryResDefaultTypeInternal _GetSingleChatHistoryRes_default_instance_;
class UnReadMessageReq;
struct UnReadMessageReqDefaultTypeInternal;
extern UnReadMessageReqDefaultTypeInternal _UnReadMessageReq_default_instance_;
class UnReadMessageRes;
struct UnReadMessageResDefaultTypeInternal;
extern UnReadMessageResDefaultTypeInternal _UnReadMessageRes_default_instance_;
}  // namespace im_home_proto
PROTOBUF_NAMESPACE_OPEN
template<> ::im_home_proto::DownLoadFileMessageReq* Arena::CreateMaybeMessage<::im_home_proto::DownLoadFileMessageReq>(Arena*);
template<> ::im_home_proto::DownLoadFileMessageRes* Arena::CreateMaybeMessage<::im_home_proto::DownLoadFileMessageRes>(Arena*);
template<> ::im_home_proto::GetSingleChatHistoryReq* Arena::CreateMaybeMessage<::im_home_proto::GetSingleChatHistoryReq>(Arena*);
template<> ::im_home_proto::GetSingleChatHistoryRes* Arena::CreateMaybeMessage<::im_home_proto::GetSingleChatHistoryRes>(Arena*);
template<> ::im_home_proto::UnReadMessageReq* Arena::CreateMaybeMessage<::im_home_proto::UnReadMessageReq>(Arena*);
template<> ::im_home_proto::UnReadMessageRes* Arena::CreateMaybeMessage<::im_home_proto::UnReadMessageRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace im_home_proto {

// ===================================================================

class GetSingleChatHistoryReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.GetSingleChatHistoryReq) */ {
 public:
  inline GetSingleChatHistoryReq() : GetSingleChatHistoryReq(nullptr) {}
  ~GetSingleChatHistoryReq() override;
  explicit PROTOBUF_CONSTEXPR GetSingleChatHistoryReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSingleChatHistoryReq(const GetSingleChatHistoryReq& from);
  GetSingleChatHistoryReq(GetSingleChatHistoryReq&& from) noexcept
    : GetSingleChatHistoryReq() {
    *this = ::std::move(from);
  }

  inline GetSingleChatHistoryReq& operator=(const GetSingleChatHistoryReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSingleChatHistoryReq& operator=(GetSingleChatHistoryReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSingleChatHistoryReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSingleChatHistoryReq* internal_default_instance() {
    return reinterpret_cast<const GetSingleChatHistoryReq*>(
               &_GetSingleChatHistoryReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetSingleChatHistoryReq& a, GetSingleChatHistoryReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSingleChatHistoryReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSingleChatHistoryReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSingleChatHistoryReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSingleChatHistoryReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSingleChatHistoryReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSingleChatHistoryReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSingleChatHistoryReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.GetSingleChatHistoryReq";
  }
  protected:
  explicit GetSingleChatHistoryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxNotGainMessageIDFieldNumber = 1,
    kFriendIDFieldNumber = 2,
  };
  // int64 MaxNotGainMessageID = 1;
  void clear_maxnotgainmessageid();
  int64_t maxnotgainmessageid() const;
  void set_maxnotgainmessageid(int64_t value);
  private:
  int64_t _internal_maxnotgainmessageid() const;
  void _internal_set_maxnotgainmessageid(int64_t value);
  public:

  // int64 FriendID = 2;
  void clear_friendid();
  int64_t friendid() const;
  void set_friendid(int64_t value);
  private:
  int64_t _internal_friendid() const;
  void _internal_set_friendid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.GetSingleChatHistoryReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t maxnotgainmessageid_;
  int64_t friendid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class GetSingleChatHistoryRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.GetSingleChatHistoryRes) */ {
 public:
  inline GetSingleChatHistoryRes() : GetSingleChatHistoryRes(nullptr) {}
  ~GetSingleChatHistoryRes() override;
  explicit PROTOBUF_CONSTEXPR GetSingleChatHistoryRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSingleChatHistoryRes(const GetSingleChatHistoryRes& from);
  GetSingleChatHistoryRes(GetSingleChatHistoryRes&& from) noexcept
    : GetSingleChatHistoryRes() {
    *this = ::std::move(from);
  }

  inline GetSingleChatHistoryRes& operator=(const GetSingleChatHistoryRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSingleChatHistoryRes& operator=(GetSingleChatHistoryRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSingleChatHistoryRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSingleChatHistoryRes* internal_default_instance() {
    return reinterpret_cast<const GetSingleChatHistoryRes*>(
               &_GetSingleChatHistoryRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetSingleChatHistoryRes& a, GetSingleChatHistoryRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSingleChatHistoryRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSingleChatHistoryRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSingleChatHistoryRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSingleChatHistoryRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSingleChatHistoryRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSingleChatHistoryRes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSingleChatHistoryRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.GetSingleChatHistoryRes";
  }
  protected:
  explicit GetSingleChatHistoryRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kFriendIDFieldNumber = 1,
  };
  // repeated .im_home_proto.ChatMessage Data = 2;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::im_home_proto::ChatMessage* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::ChatMessage >*
      mutable_data();
  private:
  const ::im_home_proto::ChatMessage& _internal_data(int index) const;
  ::im_home_proto::ChatMessage* _internal_add_data();
  public:
  const ::im_home_proto::ChatMessage& data(int index) const;
  ::im_home_proto::ChatMessage* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::ChatMessage >&
      data() const;

  // int64 FriendID = 1;
  void clear_friendid();
  int64_t friendid() const;
  void set_friendid(int64_t value);
  private:
  int64_t _internal_friendid() const;
  void _internal_set_friendid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.GetSingleChatHistoryRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::ChatMessage > data_;
  int64_t friendid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class UnReadMessageReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.UnReadMessageReq) */ {
 public:
  inline UnReadMessageReq() : UnReadMessageReq(nullptr) {}
  ~UnReadMessageReq() override;
  explicit PROTOBUF_CONSTEXPR UnReadMessageReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnReadMessageReq(const UnReadMessageReq& from);
  UnReadMessageReq(UnReadMessageReq&& from) noexcept
    : UnReadMessageReq() {
    *this = ::std::move(from);
  }

  inline UnReadMessageReq& operator=(const UnReadMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnReadMessageReq& operator=(UnReadMessageReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnReadMessageReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnReadMessageReq* internal_default_instance() {
    return reinterpret_cast<const UnReadMessageReq*>(
               &_UnReadMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UnReadMessageReq& a, UnReadMessageReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UnReadMessageReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnReadMessageReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnReadMessageReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnReadMessageReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnReadMessageReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const UnReadMessageReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnReadMessageReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.UnReadMessageReq";
  }
  protected:
  explicit UnReadMessageReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendIDFieldNumber = 1,
  };
  // int64 FriendID = 1;
  void clear_friendid();
  int64_t friendid() const;
  void set_friendid(int64_t value);
  private:
  int64_t _internal_friendid() const;
  void _internal_set_friendid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.UnReadMessageReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t friendid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class UnReadMessageRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.UnReadMessageRes) */ {
 public:
  inline UnReadMessageRes() : UnReadMessageRes(nullptr) {}
  ~UnReadMessageRes() override;
  explicit PROTOBUF_CONSTEXPR UnReadMessageRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnReadMessageRes(const UnReadMessageRes& from);
  UnReadMessageRes(UnReadMessageRes&& from) noexcept
    : UnReadMessageRes() {
    *this = ::std::move(from);
  }

  inline UnReadMessageRes& operator=(const UnReadMessageRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnReadMessageRes& operator=(UnReadMessageRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnReadMessageRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnReadMessageRes* internal_default_instance() {
    return reinterpret_cast<const UnReadMessageRes*>(
               &_UnReadMessageRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UnReadMessageRes& a, UnReadMessageRes& b) {
    a.Swap(&b);
  }
  inline void Swap(UnReadMessageRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnReadMessageRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnReadMessageRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnReadMessageRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnReadMessageRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const UnReadMessageRes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnReadMessageRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.UnReadMessageRes";
  }
  protected:
  explicit UnReadMessageRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendIDFieldNumber = 1,
  };
  // int64 FriendID = 1;
  void clear_friendid();
  int64_t friendid() const;
  void set_friendid(int64_t value);
  private:
  int64_t _internal_friendid() const;
  void _internal_set_friendid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.UnReadMessageRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t friendid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class DownLoadFileMessageReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.DownLoadFileMessageReq) */ {
 public:
  inline DownLoadFileMessageReq() : DownLoadFileMessageReq(nullptr) {}
  ~DownLoadFileMessageReq() override;
  explicit PROTOBUF_CONSTEXPR DownLoadFileMessageReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DownLoadFileMessageReq(const DownLoadFileMessageReq& from);
  DownLoadFileMessageReq(DownLoadFileMessageReq&& from) noexcept
    : DownLoadFileMessageReq() {
    *this = ::std::move(from);
  }

  inline DownLoadFileMessageReq& operator=(const DownLoadFileMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline DownLoadFileMessageReq& operator=(DownLoadFileMessageReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DownLoadFileMessageReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const DownLoadFileMessageReq* internal_default_instance() {
    return reinterpret_cast<const DownLoadFileMessageReq*>(
               &_DownLoadFileMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DownLoadFileMessageReq& a, DownLoadFileMessageReq& b) {
    a.Swap(&b);
  }
  inline void Swap(DownLoadFileMessageReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DownLoadFileMessageReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DownLoadFileMessageReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DownLoadFileMessageReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DownLoadFileMessageReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DownLoadFileMessageReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DownLoadFileMessageReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.DownLoadFileMessageReq";
  }
  protected:
  explicit DownLoadFileMessageReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendIDFieldNumber = 1,
    kMessageIDFieldNumber = 2,
    kFileIndexFieldNumber = 3,
    kMessageFileTypeFieldNumber = 4,
  };
  // int64 FriendID = 1;
  void clear_friendid();
  int64_t friendid() const;
  void set_friendid(int64_t value);
  private:
  int64_t _internal_friendid() const;
  void _internal_set_friendid(int64_t value);
  public:

  // int64 MessageID = 2;
  void clear_messageid();
  int64_t messageid() const;
  void set_messageid(int64_t value);
  private:
  int64_t _internal_messageid() const;
  void _internal_set_messageid(int64_t value);
  public:

  // int32 FileIndex = 3;
  void clear_fileindex();
  int32_t fileindex() const;
  void set_fileindex(int32_t value);
  private:
  int32_t _internal_fileindex() const;
  void _internal_set_fileindex(int32_t value);
  public:

  // .im_home_proto.MessageFileType_Enum MessageFileType = 4;
  void clear_messagefiletype();
  ::im_home_proto::MessageFileType_Enum messagefiletype() const;
  void set_messagefiletype(::im_home_proto::MessageFileType_Enum value);
  private:
  ::im_home_proto::MessageFileType_Enum _internal_messagefiletype() const;
  void _internal_set_messagefiletype(::im_home_proto::MessageFileType_Enum value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.DownLoadFileMessageReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t friendid_;
  int64_t messageid_;
  int32_t fileindex_;
  int messagefiletype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class DownLoadFileMessageRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.DownLoadFileMessageRes) */ {
 public:
  inline DownLoadFileMessageRes() : DownLoadFileMessageRes(nullptr) {}
  ~DownLoadFileMessageRes() override;
  explicit PROTOBUF_CONSTEXPR DownLoadFileMessageRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DownLoadFileMessageRes(const DownLoadFileMessageRes& from);
  DownLoadFileMessageRes(DownLoadFileMessageRes&& from) noexcept
    : DownLoadFileMessageRes() {
    *this = ::std::move(from);
  }

  inline DownLoadFileMessageRes& operator=(const DownLoadFileMessageRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DownLoadFileMessageRes& operator=(DownLoadFileMessageRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DownLoadFileMessageRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DownLoadFileMessageRes* internal_default_instance() {
    return reinterpret_cast<const DownLoadFileMessageRes*>(
               &_DownLoadFileMessageRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DownLoadFileMessageRes& a, DownLoadFileMessageRes& b) {
    a.Swap(&b);
  }
  inline void Swap(DownLoadFileMessageRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DownLoadFileMessageRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DownLoadFileMessageRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DownLoadFileMessageRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DownLoadFileMessageRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DownLoadFileMessageRes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DownLoadFileMessageRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.DownLoadFileMessageRes";
  }
  protected:
  explicit DownLoadFileMessageRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileDataFieldNumber = 4,
    kFriendIDFieldNumber = 1,
    kMessageIDFieldNumber = 2,
    kFileIndexFieldNumber = 3,
    kMessageFileTypeFieldNumber = 5,
  };
  // string FileData = 4;
  void clear_filedata();
  const std::string& filedata() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_filedata(ArgT0&& arg0, ArgT... args);
  std::string* mutable_filedata();
  PROTOBUF_NODISCARD std::string* release_filedata();
  void set_allocated_filedata(std::string* filedata);
  private:
  const std::string& _internal_filedata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filedata(const std::string& value);
  std::string* _internal_mutable_filedata();
  public:

  // int64 FriendID = 1;
  void clear_friendid();
  int64_t friendid() const;
  void set_friendid(int64_t value);
  private:
  int64_t _internal_friendid() const;
  void _internal_set_friendid(int64_t value);
  public:

  // int64 MessageID = 2;
  void clear_messageid();
  int64_t messageid() const;
  void set_messageid(int64_t value);
  private:
  int64_t _internal_messageid() const;
  void _internal_set_messageid(int64_t value);
  public:

  // int32 FileIndex = 3;
  void clear_fileindex();
  int32_t fileindex() const;
  void set_fileindex(int32_t value);
  private:
  int32_t _internal_fileindex() const;
  void _internal_set_fileindex(int32_t value);
  public:

  // .im_home_proto.MessageFileType_Enum MessageFileType = 5;
  void clear_messagefiletype();
  ::im_home_proto::MessageFileType_Enum messagefiletype() const;
  void set_messagefiletype(::im_home_proto::MessageFileType_Enum value);
  private:
  ::im_home_proto::MessageFileType_Enum _internal_messagefiletype() const;
  void _internal_set_messagefiletype(::im_home_proto::MessageFileType_Enum value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.DownLoadFileMessageRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filedata_;
  int64_t friendid_;
  int64_t messageid_;
  int32_t fileindex_;
  int messagefiletype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetSingleChatHistoryReq

// int64 MaxNotGainMessageID = 1;
inline void GetSingleChatHistoryReq::clear_maxnotgainmessageid() {
  maxnotgainmessageid_ = int64_t{0};
}
inline int64_t GetSingleChatHistoryReq::_internal_maxnotgainmessageid() const {
  return maxnotgainmessageid_;
}
inline int64_t GetSingleChatHistoryReq::maxnotgainmessageid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetSingleChatHistoryReq.MaxNotGainMessageID)
  return _internal_maxnotgainmessageid();
}
inline void GetSingleChatHistoryReq::_internal_set_maxnotgainmessageid(int64_t value) {
  
  maxnotgainmessageid_ = value;
}
inline void GetSingleChatHistoryReq::set_maxnotgainmessageid(int64_t value) {
  _internal_set_maxnotgainmessageid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.GetSingleChatHistoryReq.MaxNotGainMessageID)
}

// int64 FriendID = 2;
inline void GetSingleChatHistoryReq::clear_friendid() {
  friendid_ = int64_t{0};
}
inline int64_t GetSingleChatHistoryReq::_internal_friendid() const {
  return friendid_;
}
inline int64_t GetSingleChatHistoryReq::friendid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetSingleChatHistoryReq.FriendID)
  return _internal_friendid();
}
inline void GetSingleChatHistoryReq::_internal_set_friendid(int64_t value) {
  
  friendid_ = value;
}
inline void GetSingleChatHistoryReq::set_friendid(int64_t value) {
  _internal_set_friendid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.GetSingleChatHistoryReq.FriendID)
}

// -------------------------------------------------------------------

// GetSingleChatHistoryRes

// int64 FriendID = 1;
inline void GetSingleChatHistoryRes::clear_friendid() {
  friendid_ = int64_t{0};
}
inline int64_t GetSingleChatHistoryRes::_internal_friendid() const {
  return friendid_;
}
inline int64_t GetSingleChatHistoryRes::friendid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetSingleChatHistoryRes.FriendID)
  return _internal_friendid();
}
inline void GetSingleChatHistoryRes::_internal_set_friendid(int64_t value) {
  
  friendid_ = value;
}
inline void GetSingleChatHistoryRes::set_friendid(int64_t value) {
  _internal_set_friendid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.GetSingleChatHistoryRes.FriendID)
}

// repeated .im_home_proto.ChatMessage Data = 2;
inline int GetSingleChatHistoryRes::_internal_data_size() const {
  return data_.size();
}
inline int GetSingleChatHistoryRes::data_size() const {
  return _internal_data_size();
}
inline ::im_home_proto::ChatMessage* GetSingleChatHistoryRes::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:im_home_proto.GetSingleChatHistoryRes.Data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::ChatMessage >*
GetSingleChatHistoryRes::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:im_home_proto.GetSingleChatHistoryRes.Data)
  return &data_;
}
inline const ::im_home_proto::ChatMessage& GetSingleChatHistoryRes::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::im_home_proto::ChatMessage& GetSingleChatHistoryRes::data(int index) const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetSingleChatHistoryRes.Data)
  return _internal_data(index);
}
inline ::im_home_proto::ChatMessage* GetSingleChatHistoryRes::_internal_add_data() {
  return data_.Add();
}
inline ::im_home_proto::ChatMessage* GetSingleChatHistoryRes::add_data() {
  ::im_home_proto::ChatMessage* _add = _internal_add_data();
  // @@protoc_insertion_point(field_add:im_home_proto.GetSingleChatHistoryRes.Data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::ChatMessage >&
GetSingleChatHistoryRes::data() const {
  // @@protoc_insertion_point(field_list:im_home_proto.GetSingleChatHistoryRes.Data)
  return data_;
}

// -------------------------------------------------------------------

// UnReadMessageReq

// int64 FriendID = 1;
inline void UnReadMessageReq::clear_friendid() {
  friendid_ = int64_t{0};
}
inline int64_t UnReadMessageReq::_internal_friendid() const {
  return friendid_;
}
inline int64_t UnReadMessageReq::friendid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.UnReadMessageReq.FriendID)
  return _internal_friendid();
}
inline void UnReadMessageReq::_internal_set_friendid(int64_t value) {
  
  friendid_ = value;
}
inline void UnReadMessageReq::set_friendid(int64_t value) {
  _internal_set_friendid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.UnReadMessageReq.FriendID)
}

// -------------------------------------------------------------------

// UnReadMessageRes

// int64 FriendID = 1;
inline void UnReadMessageRes::clear_friendid() {
  friendid_ = int64_t{0};
}
inline int64_t UnReadMessageRes::_internal_friendid() const {
  return friendid_;
}
inline int64_t UnReadMessageRes::friendid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.UnReadMessageRes.FriendID)
  return _internal_friendid();
}
inline void UnReadMessageRes::_internal_set_friendid(int64_t value) {
  
  friendid_ = value;
}
inline void UnReadMessageRes::set_friendid(int64_t value) {
  _internal_set_friendid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.UnReadMessageRes.FriendID)
}

// -------------------------------------------------------------------

// DownLoadFileMessageReq

// int64 FriendID = 1;
inline void DownLoadFileMessageReq::clear_friendid() {
  friendid_ = int64_t{0};
}
inline int64_t DownLoadFileMessageReq::_internal_friendid() const {
  return friendid_;
}
inline int64_t DownLoadFileMessageReq::friendid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageReq.FriendID)
  return _internal_friendid();
}
inline void DownLoadFileMessageReq::_internal_set_friendid(int64_t value) {
  
  friendid_ = value;
}
inline void DownLoadFileMessageReq::set_friendid(int64_t value) {
  _internal_set_friendid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageReq.FriendID)
}

// int64 MessageID = 2;
inline void DownLoadFileMessageReq::clear_messageid() {
  messageid_ = int64_t{0};
}
inline int64_t DownLoadFileMessageReq::_internal_messageid() const {
  return messageid_;
}
inline int64_t DownLoadFileMessageReq::messageid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageReq.MessageID)
  return _internal_messageid();
}
inline void DownLoadFileMessageReq::_internal_set_messageid(int64_t value) {
  
  messageid_ = value;
}
inline void DownLoadFileMessageReq::set_messageid(int64_t value) {
  _internal_set_messageid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageReq.MessageID)
}

// int32 FileIndex = 3;
inline void DownLoadFileMessageReq::clear_fileindex() {
  fileindex_ = 0;
}
inline int32_t DownLoadFileMessageReq::_internal_fileindex() const {
  return fileindex_;
}
inline int32_t DownLoadFileMessageReq::fileindex() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageReq.FileIndex)
  return _internal_fileindex();
}
inline void DownLoadFileMessageReq::_internal_set_fileindex(int32_t value) {
  
  fileindex_ = value;
}
inline void DownLoadFileMessageReq::set_fileindex(int32_t value) {
  _internal_set_fileindex(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageReq.FileIndex)
}

// .im_home_proto.MessageFileType_Enum MessageFileType = 4;
inline void DownLoadFileMessageReq::clear_messagefiletype() {
  messagefiletype_ = 0;
}
inline ::im_home_proto::MessageFileType_Enum DownLoadFileMessageReq::_internal_messagefiletype() const {
  return static_cast< ::im_home_proto::MessageFileType_Enum >(messagefiletype_);
}
inline ::im_home_proto::MessageFileType_Enum DownLoadFileMessageReq::messagefiletype() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageReq.MessageFileType)
  return _internal_messagefiletype();
}
inline void DownLoadFileMessageReq::_internal_set_messagefiletype(::im_home_proto::MessageFileType_Enum value) {
  
  messagefiletype_ = value;
}
inline void DownLoadFileMessageReq::set_messagefiletype(::im_home_proto::MessageFileType_Enum value) {
  _internal_set_messagefiletype(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageReq.MessageFileType)
}

// -------------------------------------------------------------------

// DownLoadFileMessageRes

// int64 FriendID = 1;
inline void DownLoadFileMessageRes::clear_friendid() {
  friendid_ = int64_t{0};
}
inline int64_t DownLoadFileMessageRes::_internal_friendid() const {
  return friendid_;
}
inline int64_t DownLoadFileMessageRes::friendid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageRes.FriendID)
  return _internal_friendid();
}
inline void DownLoadFileMessageRes::_internal_set_friendid(int64_t value) {
  
  friendid_ = value;
}
inline void DownLoadFileMessageRes::set_friendid(int64_t value) {
  _internal_set_friendid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageRes.FriendID)
}

// int64 MessageID = 2;
inline void DownLoadFileMessageRes::clear_messageid() {
  messageid_ = int64_t{0};
}
inline int64_t DownLoadFileMessageRes::_internal_messageid() const {
  return messageid_;
}
inline int64_t DownLoadFileMessageRes::messageid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageRes.MessageID)
  return _internal_messageid();
}
inline void DownLoadFileMessageRes::_internal_set_messageid(int64_t value) {
  
  messageid_ = value;
}
inline void DownLoadFileMessageRes::set_messageid(int64_t value) {
  _internal_set_messageid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageRes.MessageID)
}

// int32 FileIndex = 3;
inline void DownLoadFileMessageRes::clear_fileindex() {
  fileindex_ = 0;
}
inline int32_t DownLoadFileMessageRes::_internal_fileindex() const {
  return fileindex_;
}
inline int32_t DownLoadFileMessageRes::fileindex() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageRes.FileIndex)
  return _internal_fileindex();
}
inline void DownLoadFileMessageRes::_internal_set_fileindex(int32_t value) {
  
  fileindex_ = value;
}
inline void DownLoadFileMessageRes::set_fileindex(int32_t value) {
  _internal_set_fileindex(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageRes.FileIndex)
}

// string FileData = 4;
inline void DownLoadFileMessageRes::clear_filedata() {
  filedata_.ClearToEmpty();
}
inline const std::string& DownLoadFileMessageRes::filedata() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageRes.FileData)
  return _internal_filedata();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DownLoadFileMessageRes::set_filedata(ArgT0&& arg0, ArgT... args) {
 
 filedata_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageRes.FileData)
}
inline std::string* DownLoadFileMessageRes::mutable_filedata() {
  std::string* _s = _internal_mutable_filedata();
  // @@protoc_insertion_point(field_mutable:im_home_proto.DownLoadFileMessageRes.FileData)
  return _s;
}
inline const std::string& DownLoadFileMessageRes::_internal_filedata() const {
  return filedata_.Get();
}
inline void DownLoadFileMessageRes::_internal_set_filedata(const std::string& value) {
  
  filedata_.Set(value, GetArenaForAllocation());
}
inline std::string* DownLoadFileMessageRes::_internal_mutable_filedata() {
  
  return filedata_.Mutable(GetArenaForAllocation());
}
inline std::string* DownLoadFileMessageRes::release_filedata() {
  // @@protoc_insertion_point(field_release:im_home_proto.DownLoadFileMessageRes.FileData)
  return filedata_.Release();
}
inline void DownLoadFileMessageRes::set_allocated_filedata(std::string* filedata) {
  if (filedata != nullptr) {
    
  } else {
    
  }
  filedata_.SetAllocated(filedata, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (filedata_.IsDefault()) {
    filedata_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:im_home_proto.DownLoadFileMessageRes.FileData)
}

// .im_home_proto.MessageFileType_Enum MessageFileType = 5;
inline void DownLoadFileMessageRes::clear_messagefiletype() {
  messagefiletype_ = 0;
}
inline ::im_home_proto::MessageFileType_Enum DownLoadFileMessageRes::_internal_messagefiletype() const {
  return static_cast< ::im_home_proto::MessageFileType_Enum >(messagefiletype_);
}
inline ::im_home_proto::MessageFileType_Enum DownLoadFileMessageRes::messagefiletype() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DownLoadFileMessageRes.MessageFileType)
  return _internal_messagefiletype();
}
inline void DownLoadFileMessageRes::_internal_set_messagefiletype(::im_home_proto::MessageFileType_Enum value) {
  
  messagefiletype_ = value;
}
inline void DownLoadFileMessageRes::set_messagefiletype(::im_home_proto::MessageFileType_Enum value) {
  _internal_set_messagefiletype(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DownLoadFileMessageRes.MessageFileType)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace im_home_proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_home_5fmessage_2eproto
