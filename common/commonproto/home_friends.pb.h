// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: home_friends.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_home_5ffriends_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_home_5ffriends_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_home_5ffriends_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_home_5ffriends_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_home_5ffriends_2eproto;
namespace im_home_proto {
class AgreeFriendApplyReq;
struct AgreeFriendApplyReqDefaultTypeInternal;
extern AgreeFriendApplyReqDefaultTypeInternal _AgreeFriendApplyReq_default_instance_;
class AgreeFriendApplyRes;
struct AgreeFriendApplyResDefaultTypeInternal;
extern AgreeFriendApplyResDefaultTypeInternal _AgreeFriendApplyRes_default_instance_;
class ApplyFriendsReq;
struct ApplyFriendsReqDefaultTypeInternal;
extern ApplyFriendsReqDefaultTypeInternal _ApplyFriendsReq_default_instance_;
class ApplyFriendsRes;
struct ApplyFriendsResDefaultTypeInternal;
extern ApplyFriendsResDefaultTypeInternal _ApplyFriendsRes_default_instance_;
class DelFriendsReq;
struct DelFriendsReqDefaultTypeInternal;
extern DelFriendsReqDefaultTypeInternal _DelFriendsReq_default_instance_;
class DelFriendsRes;
struct DelFriendsResDefaultTypeInternal;
extern DelFriendsResDefaultTypeInternal _DelFriendsRes_default_instance_;
class GetFriendsListReq;
struct GetFriendsListReqDefaultTypeInternal;
extern GetFriendsListReqDefaultTypeInternal _GetFriendsListReq_default_instance_;
class GetFriendsListRes;
struct GetFriendsListResDefaultTypeInternal;
extern GetFriendsListResDefaultTypeInternal _GetFriendsListRes_default_instance_;
class GetFriendsListRes_BriedFriends;
struct GetFriendsListRes_BriedFriendsDefaultTypeInternal;
extern GetFriendsListRes_BriedFriendsDefaultTypeInternal _GetFriendsListRes_BriedFriends_default_instance_;
}  // namespace im_home_proto
PROTOBUF_NAMESPACE_OPEN
template<> ::im_home_proto::AgreeFriendApplyReq* Arena::CreateMaybeMessage<::im_home_proto::AgreeFriendApplyReq>(Arena*);
template<> ::im_home_proto::AgreeFriendApplyRes* Arena::CreateMaybeMessage<::im_home_proto::AgreeFriendApplyRes>(Arena*);
template<> ::im_home_proto::ApplyFriendsReq* Arena::CreateMaybeMessage<::im_home_proto::ApplyFriendsReq>(Arena*);
template<> ::im_home_proto::ApplyFriendsRes* Arena::CreateMaybeMessage<::im_home_proto::ApplyFriendsRes>(Arena*);
template<> ::im_home_proto::DelFriendsReq* Arena::CreateMaybeMessage<::im_home_proto::DelFriendsReq>(Arena*);
template<> ::im_home_proto::DelFriendsRes* Arena::CreateMaybeMessage<::im_home_proto::DelFriendsRes>(Arena*);
template<> ::im_home_proto::GetFriendsListReq* Arena::CreateMaybeMessage<::im_home_proto::GetFriendsListReq>(Arena*);
template<> ::im_home_proto::GetFriendsListRes* Arena::CreateMaybeMessage<::im_home_proto::GetFriendsListRes>(Arena*);
template<> ::im_home_proto::GetFriendsListRes_BriedFriends* Arena::CreateMaybeMessage<::im_home_proto::GetFriendsListRes_BriedFriends>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace im_home_proto {

// ===================================================================

class GetFriendsListReq final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:im_home_proto.GetFriendsListReq) */ {
 public:
  inline GetFriendsListReq() : GetFriendsListReq(nullptr) {}
  explicit PROTOBUF_CONSTEXPR GetFriendsListReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetFriendsListReq(const GetFriendsListReq& from);
  GetFriendsListReq(GetFriendsListReq&& from) noexcept
    : GetFriendsListReq() {
    *this = ::std::move(from);
  }

  inline GetFriendsListReq& operator=(const GetFriendsListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFriendsListReq& operator=(GetFriendsListReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFriendsListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFriendsListReq* internal_default_instance() {
    return reinterpret_cast<const GetFriendsListReq*>(
               &_GetFriendsListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetFriendsListReq& a, GetFriendsListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFriendsListReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFriendsListReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFriendsListReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetFriendsListReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetFriendsListReq& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetFriendsListReq& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.GetFriendsListReq";
  }
  protected:
  explicit GetFriendsListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:im_home_proto.GetFriendsListReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class GetFriendsListRes_BriedFriends final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.GetFriendsListRes.BriedFriends) */ {
 public:
  inline GetFriendsListRes_BriedFriends() : GetFriendsListRes_BriedFriends(nullptr) {}
  ~GetFriendsListRes_BriedFriends() override;
  explicit PROTOBUF_CONSTEXPR GetFriendsListRes_BriedFriends(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetFriendsListRes_BriedFriends(const GetFriendsListRes_BriedFriends& from);
  GetFriendsListRes_BriedFriends(GetFriendsListRes_BriedFriends&& from) noexcept
    : GetFriendsListRes_BriedFriends() {
    *this = ::std::move(from);
  }

  inline GetFriendsListRes_BriedFriends& operator=(const GetFriendsListRes_BriedFriends& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFriendsListRes_BriedFriends& operator=(GetFriendsListRes_BriedFriends&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFriendsListRes_BriedFriends& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFriendsListRes_BriedFriends* internal_default_instance() {
    return reinterpret_cast<const GetFriendsListRes_BriedFriends*>(
               &_GetFriendsListRes_BriedFriends_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetFriendsListRes_BriedFriends& a, GetFriendsListRes_BriedFriends& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFriendsListRes_BriedFriends* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFriendsListRes_BriedFriends* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFriendsListRes_BriedFriends* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetFriendsListRes_BriedFriends>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetFriendsListRes_BriedFriends& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetFriendsListRes_BriedFriends& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendsListRes_BriedFriends* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.GetFriendsListRes.BriedFriends";
  }
  protected:
  explicit GetFriendsListRes_BriedFriends(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserNameFieldNumber = 2,
    kUserIDFieldNumber = 1,
    kBOnlineFieldNumber = 3,
  };
  // string UserName = 2;
  void clear_username();
  const std::string& username() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_username(ArgT0&& arg0, ArgT... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // int64 UserID = 1;
  void clear_userid();
  int64_t userid() const;
  void set_userid(int64_t value);
  private:
  int64_t _internal_userid() const;
  void _internal_set_userid(int64_t value);
  public:

  // bool bOnline = 3;
  void clear_bonline();
  bool bonline() const;
  void set_bonline(bool value);
  private:
  bool _internal_bonline() const;
  void _internal_set_bonline(bool value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.GetFriendsListRes.BriedFriends)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  int64_t userid_;
  bool bonline_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class GetFriendsListRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.GetFriendsListRes) */ {
 public:
  inline GetFriendsListRes() : GetFriendsListRes(nullptr) {}
  ~GetFriendsListRes() override;
  explicit PROTOBUF_CONSTEXPR GetFriendsListRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetFriendsListRes(const GetFriendsListRes& from);
  GetFriendsListRes(GetFriendsListRes&& from) noexcept
    : GetFriendsListRes() {
    *this = ::std::move(from);
  }

  inline GetFriendsListRes& operator=(const GetFriendsListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFriendsListRes& operator=(GetFriendsListRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFriendsListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFriendsListRes* internal_default_instance() {
    return reinterpret_cast<const GetFriendsListRes*>(
               &_GetFriendsListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetFriendsListRes& a, GetFriendsListRes& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFriendsListRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFriendsListRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFriendsListRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetFriendsListRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetFriendsListRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetFriendsListRes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendsListRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.GetFriendsListRes";
  }
  protected:
  explicit GetFriendsListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetFriendsListRes_BriedFriends BriedFriends;

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
  };
  // repeated .im_home_proto.GetFriendsListRes.BriedFriends List = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::im_home_proto::GetFriendsListRes_BriedFriends* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::GetFriendsListRes_BriedFriends >*
      mutable_list();
  private:
  const ::im_home_proto::GetFriendsListRes_BriedFriends& _internal_list(int index) const;
  ::im_home_proto::GetFriendsListRes_BriedFriends* _internal_add_list();
  public:
  const ::im_home_proto::GetFriendsListRes_BriedFriends& list(int index) const;
  ::im_home_proto::GetFriendsListRes_BriedFriends* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::GetFriendsListRes_BriedFriends >&
      list() const;

  // @@protoc_insertion_point(class_scope:im_home_proto.GetFriendsListRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::GetFriendsListRes_BriedFriends > list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class ApplyFriendsReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.ApplyFriendsReq) */ {
 public:
  inline ApplyFriendsReq() : ApplyFriendsReq(nullptr) {}
  ~ApplyFriendsReq() override;
  explicit PROTOBUF_CONSTEXPR ApplyFriendsReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ApplyFriendsReq(const ApplyFriendsReq& from);
  ApplyFriendsReq(ApplyFriendsReq&& from) noexcept
    : ApplyFriendsReq() {
    *this = ::std::move(from);
  }

  inline ApplyFriendsReq& operator=(const ApplyFriendsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplyFriendsReq& operator=(ApplyFriendsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApplyFriendsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ApplyFriendsReq* internal_default_instance() {
    return reinterpret_cast<const ApplyFriendsReq*>(
               &_ApplyFriendsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ApplyFriendsReq& a, ApplyFriendsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ApplyFriendsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApplyFriendsReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApplyFriendsReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ApplyFriendsReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ApplyFriendsReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ApplyFriendsReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyFriendsReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.ApplyFriendsReq";
  }
  protected:
  explicit ApplyFriendsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplyFriendsIDFieldNumber = 1,
  };
  // int64 ApplyFriendsID = 1;
  void clear_applyfriendsid();
  int64_t applyfriendsid() const;
  void set_applyfriendsid(int64_t value);
  private:
  int64_t _internal_applyfriendsid() const;
  void _internal_set_applyfriendsid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.ApplyFriendsReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t applyfriendsid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class ApplyFriendsRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.ApplyFriendsRes) */ {
 public:
  inline ApplyFriendsRes() : ApplyFriendsRes(nullptr) {}
  ~ApplyFriendsRes() override;
  explicit PROTOBUF_CONSTEXPR ApplyFriendsRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ApplyFriendsRes(const ApplyFriendsRes& from);
  ApplyFriendsRes(ApplyFriendsRes&& from) noexcept
    : ApplyFriendsRes() {
    *this = ::std::move(from);
  }

  inline ApplyFriendsRes& operator=(const ApplyFriendsRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplyFriendsRes& operator=(ApplyFriendsRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApplyFriendsRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const ApplyFriendsRes* internal_default_instance() {
    return reinterpret_cast<const ApplyFriendsRes*>(
               &_ApplyFriendsRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ApplyFriendsRes& a, ApplyFriendsRes& b) {
    a.Swap(&b);
  }
  inline void Swap(ApplyFriendsRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApplyFriendsRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApplyFriendsRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ApplyFriendsRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ApplyFriendsRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ApplyFriendsRes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyFriendsRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.ApplyFriendsRes";
  }
  protected:
  explicit ApplyFriendsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplyFriendsIDFieldNumber = 1,
  };
  // int64 ApplyFriendsID = 1;
  void clear_applyfriendsid();
  int64_t applyfriendsid() const;
  void set_applyfriendsid(int64_t value);
  private:
  int64_t _internal_applyfriendsid() const;
  void _internal_set_applyfriendsid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.ApplyFriendsRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t applyfriendsid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class AgreeFriendApplyReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.AgreeFriendApplyReq) */ {
 public:
  inline AgreeFriendApplyReq() : AgreeFriendApplyReq(nullptr) {}
  ~AgreeFriendApplyReq() override;
  explicit PROTOBUF_CONSTEXPR AgreeFriendApplyReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgreeFriendApplyReq(const AgreeFriendApplyReq& from);
  AgreeFriendApplyReq(AgreeFriendApplyReq&& from) noexcept
    : AgreeFriendApplyReq() {
    *this = ::std::move(from);
  }

  inline AgreeFriendApplyReq& operator=(const AgreeFriendApplyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgreeFriendApplyReq& operator=(AgreeFriendApplyReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgreeFriendApplyReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgreeFriendApplyReq* internal_default_instance() {
    return reinterpret_cast<const AgreeFriendApplyReq*>(
               &_AgreeFriendApplyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AgreeFriendApplyReq& a, AgreeFriendApplyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AgreeFriendApplyReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgreeFriendApplyReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgreeFriendApplyReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AgreeFriendApplyReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgreeFriendApplyReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgreeFriendApplyReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgreeFriendApplyReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.AgreeFriendApplyReq";
  }
  protected:
  explicit AgreeFriendApplyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsIDFieldNumber = 1,
  };
  // int64 FriendsID = 1;
  void clear_friendsid();
  int64_t friendsid() const;
  void set_friendsid(int64_t value);
  private:
  int64_t _internal_friendsid() const;
  void _internal_set_friendsid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.AgreeFriendApplyReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t friendsid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class AgreeFriendApplyRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.AgreeFriendApplyRes) */ {
 public:
  inline AgreeFriendApplyRes() : AgreeFriendApplyRes(nullptr) {}
  ~AgreeFriendApplyRes() override;
  explicit PROTOBUF_CONSTEXPR AgreeFriendApplyRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgreeFriendApplyRes(const AgreeFriendApplyRes& from);
  AgreeFriendApplyRes(AgreeFriendApplyRes&& from) noexcept
    : AgreeFriendApplyRes() {
    *this = ::std::move(from);
  }

  inline AgreeFriendApplyRes& operator=(const AgreeFriendApplyRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgreeFriendApplyRes& operator=(AgreeFriendApplyRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgreeFriendApplyRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgreeFriendApplyRes* internal_default_instance() {
    return reinterpret_cast<const AgreeFriendApplyRes*>(
               &_AgreeFriendApplyRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AgreeFriendApplyRes& a, AgreeFriendApplyRes& b) {
    a.Swap(&b);
  }
  inline void Swap(AgreeFriendApplyRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgreeFriendApplyRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgreeFriendApplyRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AgreeFriendApplyRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgreeFriendApplyRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgreeFriendApplyRes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgreeFriendApplyRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.AgreeFriendApplyRes";
  }
  protected:
  explicit AgreeFriendApplyRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsIDFieldNumber = 1,
  };
  // int64 FriendsID = 1;
  void clear_friendsid();
  int64_t friendsid() const;
  void set_friendsid(int64_t value);
  private:
  int64_t _internal_friendsid() const;
  void _internal_set_friendsid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.AgreeFriendApplyRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t friendsid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class DelFriendsReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.DelFriendsReq) */ {
 public:
  inline DelFriendsReq() : DelFriendsReq(nullptr) {}
  ~DelFriendsReq() override;
  explicit PROTOBUF_CONSTEXPR DelFriendsReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DelFriendsReq(const DelFriendsReq& from);
  DelFriendsReq(DelFriendsReq&& from) noexcept
    : DelFriendsReq() {
    *this = ::std::move(from);
  }

  inline DelFriendsReq& operator=(const DelFriendsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelFriendsReq& operator=(DelFriendsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelFriendsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelFriendsReq* internal_default_instance() {
    return reinterpret_cast<const DelFriendsReq*>(
               &_DelFriendsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DelFriendsReq& a, DelFriendsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(DelFriendsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelFriendsReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelFriendsReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelFriendsReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DelFriendsReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DelFriendsReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelFriendsReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.DelFriendsReq";
  }
  protected:
  explicit DelFriendsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsIDFieldNumber = 1,
  };
  // int64 FriendsID = 1;
  void clear_friendsid();
  int64_t friendsid() const;
  void set_friendsid(int64_t value);
  private:
  int64_t _internal_friendsid() const;
  void _internal_set_friendsid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.DelFriendsReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t friendsid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// -------------------------------------------------------------------

class DelFriendsRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:im_home_proto.DelFriendsRes) */ {
 public:
  inline DelFriendsRes() : DelFriendsRes(nullptr) {}
  ~DelFriendsRes() override;
  explicit PROTOBUF_CONSTEXPR DelFriendsRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DelFriendsRes(const DelFriendsRes& from);
  DelFriendsRes(DelFriendsRes&& from) noexcept
    : DelFriendsRes() {
    *this = ::std::move(from);
  }

  inline DelFriendsRes& operator=(const DelFriendsRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelFriendsRes& operator=(DelFriendsRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelFriendsRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelFriendsRes* internal_default_instance() {
    return reinterpret_cast<const DelFriendsRes*>(
               &_DelFriendsRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DelFriendsRes& a, DelFriendsRes& b) {
    a.Swap(&b);
  }
  inline void Swap(DelFriendsRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelFriendsRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelFriendsRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelFriendsRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DelFriendsRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DelFriendsRes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelFriendsRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "im_home_proto.DelFriendsRes";
  }
  protected:
  explicit DelFriendsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsIDFieldNumber = 1,
  };
  // int64 FriendsID = 1;
  void clear_friendsid();
  int64_t friendsid() const;
  void set_friendsid(int64_t value);
  private:
  int64_t _internal_friendsid() const;
  void _internal_set_friendsid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:im_home_proto.DelFriendsRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t friendsid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_home_5ffriends_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetFriendsListReq

// -------------------------------------------------------------------

// GetFriendsListRes_BriedFriends

// int64 UserID = 1;
inline void GetFriendsListRes_BriedFriends::clear_userid() {
  userid_ = int64_t{0};
}
inline int64_t GetFriendsListRes_BriedFriends::_internal_userid() const {
  return userid_;
}
inline int64_t GetFriendsListRes_BriedFriends::userid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetFriendsListRes.BriedFriends.UserID)
  return _internal_userid();
}
inline void GetFriendsListRes_BriedFriends::_internal_set_userid(int64_t value) {
  
  userid_ = value;
}
inline void GetFriendsListRes_BriedFriends::set_userid(int64_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.GetFriendsListRes.BriedFriends.UserID)
}

// string UserName = 2;
inline void GetFriendsListRes_BriedFriends::clear_username() {
  username_.ClearToEmpty();
}
inline const std::string& GetFriendsListRes_BriedFriends::username() const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetFriendsListRes.BriedFriends.UserName)
  return _internal_username();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetFriendsListRes_BriedFriends::set_username(ArgT0&& arg0, ArgT... args) {
 
 username_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:im_home_proto.GetFriendsListRes.BriedFriends.UserName)
}
inline std::string* GetFriendsListRes_BriedFriends::mutable_username() {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:im_home_proto.GetFriendsListRes.BriedFriends.UserName)
  return _s;
}
inline const std::string& GetFriendsListRes_BriedFriends::_internal_username() const {
  return username_.Get();
}
inline void GetFriendsListRes_BriedFriends::_internal_set_username(const std::string& value) {
  
  username_.Set(value, GetArenaForAllocation());
}
inline std::string* GetFriendsListRes_BriedFriends::_internal_mutable_username() {
  
  return username_.Mutable(GetArenaForAllocation());
}
inline std::string* GetFriendsListRes_BriedFriends::release_username() {
  // @@protoc_insertion_point(field_release:im_home_proto.GetFriendsListRes.BriedFriends.UserName)
  return username_.Release();
}
inline void GetFriendsListRes_BriedFriends::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocated(username, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (username_.IsDefault()) {
    username_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:im_home_proto.GetFriendsListRes.BriedFriends.UserName)
}

// bool bOnline = 3;
inline void GetFriendsListRes_BriedFriends::clear_bonline() {
  bonline_ = false;
}
inline bool GetFriendsListRes_BriedFriends::_internal_bonline() const {
  return bonline_;
}
inline bool GetFriendsListRes_BriedFriends::bonline() const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetFriendsListRes.BriedFriends.bOnline)
  return _internal_bonline();
}
inline void GetFriendsListRes_BriedFriends::_internal_set_bonline(bool value) {
  
  bonline_ = value;
}
inline void GetFriendsListRes_BriedFriends::set_bonline(bool value) {
  _internal_set_bonline(value);
  // @@protoc_insertion_point(field_set:im_home_proto.GetFriendsListRes.BriedFriends.bOnline)
}

// -------------------------------------------------------------------

// GetFriendsListRes

// repeated .im_home_proto.GetFriendsListRes.BriedFriends List = 1;
inline int GetFriendsListRes::_internal_list_size() const {
  return list_.size();
}
inline int GetFriendsListRes::list_size() const {
  return _internal_list_size();
}
inline void GetFriendsListRes::clear_list() {
  list_.Clear();
}
inline ::im_home_proto::GetFriendsListRes_BriedFriends* GetFriendsListRes::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:im_home_proto.GetFriendsListRes.List)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::GetFriendsListRes_BriedFriends >*
GetFriendsListRes::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:im_home_proto.GetFriendsListRes.List)
  return &list_;
}
inline const ::im_home_proto::GetFriendsListRes_BriedFriends& GetFriendsListRes::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::im_home_proto::GetFriendsListRes_BriedFriends& GetFriendsListRes::list(int index) const {
  // @@protoc_insertion_point(field_get:im_home_proto.GetFriendsListRes.List)
  return _internal_list(index);
}
inline ::im_home_proto::GetFriendsListRes_BriedFriends* GetFriendsListRes::_internal_add_list() {
  return list_.Add();
}
inline ::im_home_proto::GetFriendsListRes_BriedFriends* GetFriendsListRes::add_list() {
  ::im_home_proto::GetFriendsListRes_BriedFriends* _add = _internal_add_list();
  // @@protoc_insertion_point(field_add:im_home_proto.GetFriendsListRes.List)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::im_home_proto::GetFriendsListRes_BriedFriends >&
GetFriendsListRes::list() const {
  // @@protoc_insertion_point(field_list:im_home_proto.GetFriendsListRes.List)
  return list_;
}

// -------------------------------------------------------------------

// ApplyFriendsReq

// int64 ApplyFriendsID = 1;
inline void ApplyFriendsReq::clear_applyfriendsid() {
  applyfriendsid_ = int64_t{0};
}
inline int64_t ApplyFriendsReq::_internal_applyfriendsid() const {
  return applyfriendsid_;
}
inline int64_t ApplyFriendsReq::applyfriendsid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.ApplyFriendsReq.ApplyFriendsID)
  return _internal_applyfriendsid();
}
inline void ApplyFriendsReq::_internal_set_applyfriendsid(int64_t value) {
  
  applyfriendsid_ = value;
}
inline void ApplyFriendsReq::set_applyfriendsid(int64_t value) {
  _internal_set_applyfriendsid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.ApplyFriendsReq.ApplyFriendsID)
}

// -------------------------------------------------------------------

// ApplyFriendsRes

// int64 ApplyFriendsID = 1;
inline void ApplyFriendsRes::clear_applyfriendsid() {
  applyfriendsid_ = int64_t{0};
}
inline int64_t ApplyFriendsRes::_internal_applyfriendsid() const {
  return applyfriendsid_;
}
inline int64_t ApplyFriendsRes::applyfriendsid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.ApplyFriendsRes.ApplyFriendsID)
  return _internal_applyfriendsid();
}
inline void ApplyFriendsRes::_internal_set_applyfriendsid(int64_t value) {
  
  applyfriendsid_ = value;
}
inline void ApplyFriendsRes::set_applyfriendsid(int64_t value) {
  _internal_set_applyfriendsid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.ApplyFriendsRes.ApplyFriendsID)
}

// -------------------------------------------------------------------

// AgreeFriendApplyReq

// int64 FriendsID = 1;
inline void AgreeFriendApplyReq::clear_friendsid() {
  friendsid_ = int64_t{0};
}
inline int64_t AgreeFriendApplyReq::_internal_friendsid() const {
  return friendsid_;
}
inline int64_t AgreeFriendApplyReq::friendsid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.AgreeFriendApplyReq.FriendsID)
  return _internal_friendsid();
}
inline void AgreeFriendApplyReq::_internal_set_friendsid(int64_t value) {
  
  friendsid_ = value;
}
inline void AgreeFriendApplyReq::set_friendsid(int64_t value) {
  _internal_set_friendsid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.AgreeFriendApplyReq.FriendsID)
}

// -------------------------------------------------------------------

// AgreeFriendApplyRes

// int64 FriendsID = 1;
inline void AgreeFriendApplyRes::clear_friendsid() {
  friendsid_ = int64_t{0};
}
inline int64_t AgreeFriendApplyRes::_internal_friendsid() const {
  return friendsid_;
}
inline int64_t AgreeFriendApplyRes::friendsid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.AgreeFriendApplyRes.FriendsID)
  return _internal_friendsid();
}
inline void AgreeFriendApplyRes::_internal_set_friendsid(int64_t value) {
  
  friendsid_ = value;
}
inline void AgreeFriendApplyRes::set_friendsid(int64_t value) {
  _internal_set_friendsid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.AgreeFriendApplyRes.FriendsID)
}

// -------------------------------------------------------------------

// DelFriendsReq

// int64 FriendsID = 1;
inline void DelFriendsReq::clear_friendsid() {
  friendsid_ = int64_t{0};
}
inline int64_t DelFriendsReq::_internal_friendsid() const {
  return friendsid_;
}
inline int64_t DelFriendsReq::friendsid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DelFriendsReq.FriendsID)
  return _internal_friendsid();
}
inline void DelFriendsReq::_internal_set_friendsid(int64_t value) {
  
  friendsid_ = value;
}
inline void DelFriendsReq::set_friendsid(int64_t value) {
  _internal_set_friendsid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DelFriendsReq.FriendsID)
}

// -------------------------------------------------------------------

// DelFriendsRes

// int64 FriendsID = 1;
inline void DelFriendsRes::clear_friendsid() {
  friendsid_ = int64_t{0};
}
inline int64_t DelFriendsRes::_internal_friendsid() const {
  return friendsid_;
}
inline int64_t DelFriendsRes::friendsid() const {
  // @@protoc_insertion_point(field_get:im_home_proto.DelFriendsRes.FriendsID)
  return _internal_friendsid();
}
inline void DelFriendsRes::_internal_set_friendsid(int64_t value) {
  
  friendsid_ = value;
}
inline void DelFriendsRes::set_friendsid(int64_t value) {
  _internal_set_friendsid(value);
  // @@protoc_insertion_point(field_set:im_home_proto.DelFriendsRes.FriendsID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace im_home_proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_home_5ffriends_2eproto
