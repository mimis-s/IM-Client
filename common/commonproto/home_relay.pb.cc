// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: home_relay.proto

#include "home_relay.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace im_home_proto {
PROTOBUF_CONSTEXPR ChatSingleToReceiver::ChatSingleToReceiver(
    ::_pbi::ConstantInitialized)
  : data_(nullptr)
  , senderinfo_(nullptr){}
struct ChatSingleToReceiverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatSingleToReceiverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatSingleToReceiverDefaultTypeInternal() {}
  union {
    ChatSingleToReceiver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatSingleToReceiverDefaultTypeInternal _ChatSingleToReceiver_default_instance_;
PROTOBUF_CONSTEXPR ApplyFriendsToReceiver::ApplyFriendsToReceiver(
    ::_pbi::ConstantInitialized)
  : applyerinfo_(nullptr)
  , senderid_(int64_t{0})
  , receiverid_(int64_t{0}){}
struct ApplyFriendsToReceiverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApplyFriendsToReceiverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApplyFriendsToReceiverDefaultTypeInternal() {}
  union {
    ApplyFriendsToReceiver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApplyFriendsToReceiverDefaultTypeInternal _ApplyFriendsToReceiver_default_instance_;
PROTOBUF_CONSTEXPR AgreeApplyFriendsToReceiver::AgreeApplyFriendsToReceiver(
    ::_pbi::ConstantInitialized)
  : senderid_(int64_t{0})
  , receiverid_(int64_t{0}){}
struct AgreeApplyFriendsToReceiverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgreeApplyFriendsToReceiverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgreeApplyFriendsToReceiverDefaultTypeInternal() {}
  union {
    AgreeApplyFriendsToReceiver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgreeApplyFriendsToReceiverDefaultTypeInternal _AgreeApplyFriendsToReceiver_default_instance_;
PROTOBUF_CONSTEXPR NotifyUserMessage::NotifyUserMessage(
    ::_pbi::ConstantInitialized)
  : unreadsinglechat_(){}
struct NotifyUserMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyUserMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyUserMessageDefaultTypeInternal() {}
  union {
    NotifyUserMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyUserMessageDefaultTypeInternal _NotifyUserMessage_default_instance_;
PROTOBUF_CONSTEXPR NotifyUnReadMessage::NotifyUnReadMessage(
    ::_pbi::ConstantInitialized)
  : user_(nullptr)
  , unreadmessagesum_(0){}
struct NotifyUnReadMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyUnReadMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyUnReadMessageDefaultTypeInternal() {}
  union {
    NotifyUnReadMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyUnReadMessageDefaultTypeInternal _NotifyUnReadMessage_default_instance_;
}  // namespace im_home_proto
static ::_pb::Metadata file_level_metadata_home_5frelay_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_home_5frelay_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_home_5frelay_2eproto = nullptr;

const uint32_t TableStruct_home_5frelay_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ChatSingleToReceiver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ChatSingleToReceiver, data_),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ChatSingleToReceiver, senderinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsToReceiver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsToReceiver, senderid_),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsToReceiver, receiverid_),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::ApplyFriendsToReceiver, applyerinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::AgreeApplyFriendsToReceiver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::AgreeApplyFriendsToReceiver, senderid_),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::AgreeApplyFriendsToReceiver, receiverid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::NotifyUserMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::NotifyUserMessage, unreadsinglechat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::NotifyUnReadMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::im_home_proto::NotifyUnReadMessage, user_),
  PROTOBUF_FIELD_OFFSET(::im_home_proto::NotifyUnReadMessage, unreadmessagesum_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::im_home_proto::ChatSingleToReceiver)},
  { 8, -1, -1, sizeof(::im_home_proto::ApplyFriendsToReceiver)},
  { 17, -1, -1, sizeof(::im_home_proto::AgreeApplyFriendsToReceiver)},
  { 25, -1, -1, sizeof(::im_home_proto::NotifyUserMessage)},
  { 32, -1, -1, sizeof(::im_home_proto::NotifyUnReadMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::im_home_proto::_ChatSingleToReceiver_default_instance_._instance,
  &::im_home_proto::_ApplyFriendsToReceiver_default_instance_._instance,
  &::im_home_proto::_AgreeApplyFriendsToReceiver_default_instance_._instance,
  &::im_home_proto::_NotifyUserMessage_default_instance_._instance,
  &::im_home_proto::_NotifyUnReadMessage_default_instance_._instance,
};

const char descriptor_table_protodef_home_5frelay_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020home_relay.proto\022\rim_home_proto\032\017home_"
  "chat.proto\032\022home_account.proto\"m\n\024ChatSi"
  "ngleToReceiver\022(\n\004Data\030\001 \001(\0132\032.im_home_p"
  "roto.ChatMessage\022+\n\nSenderInfo\030\002 \001(\0132\027.i"
  "m_home_proto.UserInfo\"l\n\026ApplyFriendsToR"
  "eceiver\022\020\n\010SenderID\030\001 \001(\003\022\022\n\nReceiverID\030"
  "\002 \001(\003\022,\n\013ApplyerInfo\030\003 \001(\0132\027.im_home_pro"
  "to.UserInfo\"C\n\033AgreeApplyFriendsToReceiv"
  "er\022\020\n\010SenderID\030\001 \001(\003\022\022\n\nReceiverID\030\002 \001(\003"
  "\"Q\n\021NotifyUserMessage\022<\n\020UnReadSingleCha"
  "t\030\001 \003(\0132\".im_home_proto.NotifyUnReadMess"
  "age\"V\n\023NotifyUnReadMessage\022%\n\004User\030\001 \001(\013"
  "2\027.im_home_proto.UserInfo\022\030\n\020UnReadMessa"
  "geSum\030\002 \001(\005BDZBgithub.com/mimis-s/IM-Ser"
  "vice/src/common/commonproto/im_home_prot"
  "ob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_home_5frelay_2eproto_deps[2] = {
  &::descriptor_table_home_5faccount_2eproto,
  &::descriptor_table_home_5fchat_2eproto,
};
static ::_pbi::once_flag descriptor_table_home_5frelay_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_home_5frelay_2eproto = {
    false, false, 609, descriptor_table_protodef_home_5frelay_2eproto,
    "home_relay.proto",
    &descriptor_table_home_5frelay_2eproto_once, descriptor_table_home_5frelay_2eproto_deps, 2, 5,
    schemas, file_default_instances, TableStruct_home_5frelay_2eproto::offsets,
    file_level_metadata_home_5frelay_2eproto, file_level_enum_descriptors_home_5frelay_2eproto,
    file_level_service_descriptors_home_5frelay_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_home_5frelay_2eproto_getter() {
  return &descriptor_table_home_5frelay_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_home_5frelay_2eproto(&descriptor_table_home_5frelay_2eproto);
namespace im_home_proto {

// ===================================================================

class ChatSingleToReceiver::_Internal {
 public:
  static const ::im_home_proto::ChatMessage& data(const ChatSingleToReceiver* msg);
  static const ::im_home_proto::UserInfo& senderinfo(const ChatSingleToReceiver* msg);
};

const ::im_home_proto::ChatMessage&
ChatSingleToReceiver::_Internal::data(const ChatSingleToReceiver* msg) {
  return *msg->data_;
}
const ::im_home_proto::UserInfo&
ChatSingleToReceiver::_Internal::senderinfo(const ChatSingleToReceiver* msg) {
  return *msg->senderinfo_;
}
void ChatSingleToReceiver::clear_data() {
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
void ChatSingleToReceiver::clear_senderinfo() {
  if (GetArenaForAllocation() == nullptr && senderinfo_ != nullptr) {
    delete senderinfo_;
  }
  senderinfo_ = nullptr;
}
ChatSingleToReceiver::ChatSingleToReceiver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.ChatSingleToReceiver)
}
ChatSingleToReceiver::ChatSingleToReceiver(const ChatSingleToReceiver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::im_home_proto::ChatMessage(*from.data_);
  } else {
    data_ = nullptr;
  }
  if (from._internal_has_senderinfo()) {
    senderinfo_ = new ::im_home_proto::UserInfo(*from.senderinfo_);
  } else {
    senderinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:im_home_proto.ChatSingleToReceiver)
}

inline void ChatSingleToReceiver::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&senderinfo_) -
    reinterpret_cast<char*>(&data_)) + sizeof(senderinfo_));
}

ChatSingleToReceiver::~ChatSingleToReceiver() {
  // @@protoc_insertion_point(destructor:im_home_proto.ChatSingleToReceiver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChatSingleToReceiver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete senderinfo_;
}

void ChatSingleToReceiver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChatSingleToReceiver::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.ChatSingleToReceiver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  if (GetArenaForAllocation() == nullptr && senderinfo_ != nullptr) {
    delete senderinfo_;
  }
  senderinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChatSingleToReceiver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .im_home_proto.ChatMessage Data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .im_home_proto.UserInfo SenderInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_senderinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChatSingleToReceiver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.ChatSingleToReceiver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .im_home_proto.ChatMessage Data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  // .im_home_proto.UserInfo SenderInfo = 2;
  if (this->_internal_has_senderinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::senderinfo(this),
        _Internal::senderinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.ChatSingleToReceiver)
  return target;
}

size_t ChatSingleToReceiver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.ChatSingleToReceiver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .im_home_proto.ChatMessage Data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .im_home_proto.UserInfo SenderInfo = 2;
  if (this->_internal_has_senderinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *senderinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChatSingleToReceiver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChatSingleToReceiver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChatSingleToReceiver::GetClassData() const { return &_class_data_; }

void ChatSingleToReceiver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChatSingleToReceiver *>(to)->MergeFrom(
      static_cast<const ChatSingleToReceiver &>(from));
}


void ChatSingleToReceiver::MergeFrom(const ChatSingleToReceiver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.ChatSingleToReceiver)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _internal_mutable_data()->::im_home_proto::ChatMessage::MergeFrom(from._internal_data());
  }
  if (from._internal_has_senderinfo()) {
    _internal_mutable_senderinfo()->::im_home_proto::UserInfo::MergeFrom(from._internal_senderinfo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChatSingleToReceiver::CopyFrom(const ChatSingleToReceiver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.ChatSingleToReceiver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatSingleToReceiver::IsInitialized() const {
  return true;
}

void ChatSingleToReceiver::InternalSwap(ChatSingleToReceiver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChatSingleToReceiver, senderinfo_)
      + sizeof(ChatSingleToReceiver::senderinfo_)
      - PROTOBUF_FIELD_OFFSET(ChatSingleToReceiver, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChatSingleToReceiver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5frelay_2eproto_getter, &descriptor_table_home_5frelay_2eproto_once,
      file_level_metadata_home_5frelay_2eproto[0]);
}

// ===================================================================

class ApplyFriendsToReceiver::_Internal {
 public:
  static const ::im_home_proto::UserInfo& applyerinfo(const ApplyFriendsToReceiver* msg);
};

const ::im_home_proto::UserInfo&
ApplyFriendsToReceiver::_Internal::applyerinfo(const ApplyFriendsToReceiver* msg) {
  return *msg->applyerinfo_;
}
void ApplyFriendsToReceiver::clear_applyerinfo() {
  if (GetArenaForAllocation() == nullptr && applyerinfo_ != nullptr) {
    delete applyerinfo_;
  }
  applyerinfo_ = nullptr;
}
ApplyFriendsToReceiver::ApplyFriendsToReceiver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.ApplyFriendsToReceiver)
}
ApplyFriendsToReceiver::ApplyFriendsToReceiver(const ApplyFriendsToReceiver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_applyerinfo()) {
    applyerinfo_ = new ::im_home_proto::UserInfo(*from.applyerinfo_);
  } else {
    applyerinfo_ = nullptr;
  }
  ::memcpy(&senderid_, &from.senderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&receiverid_) -
    reinterpret_cast<char*>(&senderid_)) + sizeof(receiverid_));
  // @@protoc_insertion_point(copy_constructor:im_home_proto.ApplyFriendsToReceiver)
}

inline void ApplyFriendsToReceiver::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&applyerinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&receiverid_) -
    reinterpret_cast<char*>(&applyerinfo_)) + sizeof(receiverid_));
}

ApplyFriendsToReceiver::~ApplyFriendsToReceiver() {
  // @@protoc_insertion_point(destructor:im_home_proto.ApplyFriendsToReceiver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApplyFriendsToReceiver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete applyerinfo_;
}

void ApplyFriendsToReceiver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ApplyFriendsToReceiver::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.ApplyFriendsToReceiver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && applyerinfo_ != nullptr) {
    delete applyerinfo_;
  }
  applyerinfo_ = nullptr;
  ::memset(&senderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receiverid_) -
      reinterpret_cast<char*>(&senderid_)) + sizeof(receiverid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApplyFriendsToReceiver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 SenderID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          senderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ReceiverID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          receiverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .im_home_proto.UserInfo ApplyerInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_applyerinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApplyFriendsToReceiver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.ApplyFriendsToReceiver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 SenderID = 1;
  if (this->_internal_senderid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_senderid(), target);
  }

  // int64 ReceiverID = 2;
  if (this->_internal_receiverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_receiverid(), target);
  }

  // .im_home_proto.UserInfo ApplyerInfo = 3;
  if (this->_internal_has_applyerinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::applyerinfo(this),
        _Internal::applyerinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.ApplyFriendsToReceiver)
  return target;
}

size_t ApplyFriendsToReceiver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.ApplyFriendsToReceiver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .im_home_proto.UserInfo ApplyerInfo = 3;
  if (this->_internal_has_applyerinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *applyerinfo_);
  }

  // int64 SenderID = 1;
  if (this->_internal_senderid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_senderid());
  }

  // int64 ReceiverID = 2;
  if (this->_internal_receiverid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_receiverid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApplyFriendsToReceiver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ApplyFriendsToReceiver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApplyFriendsToReceiver::GetClassData() const { return &_class_data_; }

void ApplyFriendsToReceiver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ApplyFriendsToReceiver *>(to)->MergeFrom(
      static_cast<const ApplyFriendsToReceiver &>(from));
}


void ApplyFriendsToReceiver::MergeFrom(const ApplyFriendsToReceiver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.ApplyFriendsToReceiver)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_applyerinfo()) {
    _internal_mutable_applyerinfo()->::im_home_proto::UserInfo::MergeFrom(from._internal_applyerinfo());
  }
  if (from._internal_senderid() != 0) {
    _internal_set_senderid(from._internal_senderid());
  }
  if (from._internal_receiverid() != 0) {
    _internal_set_receiverid(from._internal_receiverid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApplyFriendsToReceiver::CopyFrom(const ApplyFriendsToReceiver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.ApplyFriendsToReceiver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFriendsToReceiver::IsInitialized() const {
  return true;
}

void ApplyFriendsToReceiver::InternalSwap(ApplyFriendsToReceiver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApplyFriendsToReceiver, receiverid_)
      + sizeof(ApplyFriendsToReceiver::receiverid_)
      - PROTOBUF_FIELD_OFFSET(ApplyFriendsToReceiver, applyerinfo_)>(
          reinterpret_cast<char*>(&applyerinfo_),
          reinterpret_cast<char*>(&other->applyerinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplyFriendsToReceiver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5frelay_2eproto_getter, &descriptor_table_home_5frelay_2eproto_once,
      file_level_metadata_home_5frelay_2eproto[1]);
}

// ===================================================================

class AgreeApplyFriendsToReceiver::_Internal {
 public:
};

AgreeApplyFriendsToReceiver::AgreeApplyFriendsToReceiver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.AgreeApplyFriendsToReceiver)
}
AgreeApplyFriendsToReceiver::AgreeApplyFriendsToReceiver(const AgreeApplyFriendsToReceiver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&senderid_, &from.senderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&receiverid_) -
    reinterpret_cast<char*>(&senderid_)) + sizeof(receiverid_));
  // @@protoc_insertion_point(copy_constructor:im_home_proto.AgreeApplyFriendsToReceiver)
}

inline void AgreeApplyFriendsToReceiver::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&senderid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&receiverid_) -
    reinterpret_cast<char*>(&senderid_)) + sizeof(receiverid_));
}

AgreeApplyFriendsToReceiver::~AgreeApplyFriendsToReceiver() {
  // @@protoc_insertion_point(destructor:im_home_proto.AgreeApplyFriendsToReceiver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgreeApplyFriendsToReceiver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AgreeApplyFriendsToReceiver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgreeApplyFriendsToReceiver::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.AgreeApplyFriendsToReceiver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&senderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receiverid_) -
      reinterpret_cast<char*>(&senderid_)) + sizeof(receiverid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgreeApplyFriendsToReceiver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 SenderID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          senderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ReceiverID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          receiverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgreeApplyFriendsToReceiver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.AgreeApplyFriendsToReceiver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 SenderID = 1;
  if (this->_internal_senderid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_senderid(), target);
  }

  // int64 ReceiverID = 2;
  if (this->_internal_receiverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_receiverid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.AgreeApplyFriendsToReceiver)
  return target;
}

size_t AgreeApplyFriendsToReceiver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.AgreeApplyFriendsToReceiver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 SenderID = 1;
  if (this->_internal_senderid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_senderid());
  }

  // int64 ReceiverID = 2;
  if (this->_internal_receiverid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_receiverid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgreeApplyFriendsToReceiver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgreeApplyFriendsToReceiver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgreeApplyFriendsToReceiver::GetClassData() const { return &_class_data_; }

void AgreeApplyFriendsToReceiver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgreeApplyFriendsToReceiver *>(to)->MergeFrom(
      static_cast<const AgreeApplyFriendsToReceiver &>(from));
}


void AgreeApplyFriendsToReceiver::MergeFrom(const AgreeApplyFriendsToReceiver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.AgreeApplyFriendsToReceiver)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_senderid() != 0) {
    _internal_set_senderid(from._internal_senderid());
  }
  if (from._internal_receiverid() != 0) {
    _internal_set_receiverid(from._internal_receiverid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgreeApplyFriendsToReceiver::CopyFrom(const AgreeApplyFriendsToReceiver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.AgreeApplyFriendsToReceiver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeApplyFriendsToReceiver::IsInitialized() const {
  return true;
}

void AgreeApplyFriendsToReceiver::InternalSwap(AgreeApplyFriendsToReceiver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgreeApplyFriendsToReceiver, receiverid_)
      + sizeof(AgreeApplyFriendsToReceiver::receiverid_)
      - PROTOBUF_FIELD_OFFSET(AgreeApplyFriendsToReceiver, senderid_)>(
          reinterpret_cast<char*>(&senderid_),
          reinterpret_cast<char*>(&other->senderid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgreeApplyFriendsToReceiver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5frelay_2eproto_getter, &descriptor_table_home_5frelay_2eproto_once,
      file_level_metadata_home_5frelay_2eproto[2]);
}

// ===================================================================

class NotifyUserMessage::_Internal {
 public:
};

NotifyUserMessage::NotifyUserMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  unreadsinglechat_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.NotifyUserMessage)
}
NotifyUserMessage::NotifyUserMessage(const NotifyUserMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      unreadsinglechat_(from.unreadsinglechat_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:im_home_proto.NotifyUserMessage)
}

inline void NotifyUserMessage::SharedCtor() {
}

NotifyUserMessage::~NotifyUserMessage() {
  // @@protoc_insertion_point(destructor:im_home_proto.NotifyUserMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyUserMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyUserMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyUserMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.NotifyUserMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unreadsinglechat_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyUserMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .im_home_proto.NotifyUnReadMessage UnReadSingleChat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unreadsinglechat(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyUserMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.NotifyUserMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .im_home_proto.NotifyUnReadMessage UnReadSingleChat = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unreadsinglechat_size()); i < n; i++) {
    const auto& repfield = this->_internal_unreadsinglechat(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.NotifyUserMessage)
  return target;
}

size_t NotifyUserMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.NotifyUserMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .im_home_proto.NotifyUnReadMessage UnReadSingleChat = 1;
  total_size += 1UL * this->_internal_unreadsinglechat_size();
  for (const auto& msg : this->unreadsinglechat_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyUserMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyUserMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyUserMessage::GetClassData() const { return &_class_data_; }

void NotifyUserMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyUserMessage *>(to)->MergeFrom(
      static_cast<const NotifyUserMessage &>(from));
}


void NotifyUserMessage::MergeFrom(const NotifyUserMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.NotifyUserMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  unreadsinglechat_.MergeFrom(from.unreadsinglechat_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyUserMessage::CopyFrom(const NotifyUserMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.NotifyUserMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUserMessage::IsInitialized() const {
  return true;
}

void NotifyUserMessage::InternalSwap(NotifyUserMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  unreadsinglechat_.InternalSwap(&other->unreadsinglechat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyUserMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5frelay_2eproto_getter, &descriptor_table_home_5frelay_2eproto_once,
      file_level_metadata_home_5frelay_2eproto[3]);
}

// ===================================================================

class NotifyUnReadMessage::_Internal {
 public:
  static const ::im_home_proto::UserInfo& user(const NotifyUnReadMessage* msg);
};

const ::im_home_proto::UserInfo&
NotifyUnReadMessage::_Internal::user(const NotifyUnReadMessage* msg) {
  return *msg->user_;
}
void NotifyUnReadMessage::clear_user() {
  if (GetArenaForAllocation() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
NotifyUnReadMessage::NotifyUnReadMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:im_home_proto.NotifyUnReadMessage)
}
NotifyUnReadMessage::NotifyUnReadMessage(const NotifyUnReadMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_user()) {
    user_ = new ::im_home_proto::UserInfo(*from.user_);
  } else {
    user_ = nullptr;
  }
  unreadmessagesum_ = from.unreadmessagesum_;
  // @@protoc_insertion_point(copy_constructor:im_home_proto.NotifyUnReadMessage)
}

inline void NotifyUnReadMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unreadmessagesum_) -
    reinterpret_cast<char*>(&user_)) + sizeof(unreadmessagesum_));
}

NotifyUnReadMessage::~NotifyUnReadMessage() {
  // @@protoc_insertion_point(destructor:im_home_proto.NotifyUnReadMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyUnReadMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete user_;
}

void NotifyUnReadMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyUnReadMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:im_home_proto.NotifyUnReadMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  unreadmessagesum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyUnReadMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .im_home_proto.UserInfo User = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 UnReadMessageSum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          unreadmessagesum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyUnReadMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:im_home_proto.NotifyUnReadMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .im_home_proto.UserInfo User = 1;
  if (this->_internal_has_user()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // int32 UnReadMessageSum = 2;
  if (this->_internal_unreadmessagesum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_unreadmessagesum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_home_proto.NotifyUnReadMessage)
  return target;
}

size_t NotifyUnReadMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_home_proto.NotifyUnReadMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .im_home_proto.UserInfo User = 1;
  if (this->_internal_has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // int32 UnReadMessageSum = 2;
  if (this->_internal_unreadmessagesum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unreadmessagesum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyUnReadMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyUnReadMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyUnReadMessage::GetClassData() const { return &_class_data_; }

void NotifyUnReadMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyUnReadMessage *>(to)->MergeFrom(
      static_cast<const NotifyUnReadMessage &>(from));
}


void NotifyUnReadMessage::MergeFrom(const NotifyUnReadMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_home_proto.NotifyUnReadMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_user()) {
    _internal_mutable_user()->::im_home_proto::UserInfo::MergeFrom(from._internal_user());
  }
  if (from._internal_unreadmessagesum() != 0) {
    _internal_set_unreadmessagesum(from._internal_unreadmessagesum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyUnReadMessage::CopyFrom(const NotifyUnReadMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_home_proto.NotifyUnReadMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUnReadMessage::IsInitialized() const {
  return true;
}

void NotifyUnReadMessage::InternalSwap(NotifyUnReadMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyUnReadMessage, unreadmessagesum_)
      + sizeof(NotifyUnReadMessage::unreadmessagesum_)
      - PROTOBUF_FIELD_OFFSET(NotifyUnReadMessage, user_)>(
          reinterpret_cast<char*>(&user_),
          reinterpret_cast<char*>(&other->user_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyUnReadMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_home_5frelay_2eproto_getter, &descriptor_table_home_5frelay_2eproto_once,
      file_level_metadata_home_5frelay_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace im_home_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::im_home_proto::ChatSingleToReceiver*
Arena::CreateMaybeMessage< ::im_home_proto::ChatSingleToReceiver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::ChatSingleToReceiver >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::ApplyFriendsToReceiver*
Arena::CreateMaybeMessage< ::im_home_proto::ApplyFriendsToReceiver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::ApplyFriendsToReceiver >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::AgreeApplyFriendsToReceiver*
Arena::CreateMaybeMessage< ::im_home_proto::AgreeApplyFriendsToReceiver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::AgreeApplyFriendsToReceiver >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::NotifyUserMessage*
Arena::CreateMaybeMessage< ::im_home_proto::NotifyUserMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::NotifyUserMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::im_home_proto::NotifyUnReadMessage*
Arena::CreateMaybeMessage< ::im_home_proto::NotifyUnReadMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::im_home_proto::NotifyUnReadMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
